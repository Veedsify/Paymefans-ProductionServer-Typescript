
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  fullname: 'fullname',
  user_id: 'user_id',
  username: 'username',
  admin: 'admin',
  role: 'role',
  is_active: 'is_active',
  is_verified: 'is_verified',
  is_email_verified: 'is_email_verified',
  is_model: 'is_model',
  email_verify_code: 'email_verify_code',
  email_verify_time: 'email_verify_time',
  is_phone_verified: 'is_phone_verified',
  phone: 'phone',
  profile_image: 'profile_image',
  profile_banner: 'profile_banner',
  bio: 'bio',
  location: 'location',
  website: 'website',
  country: 'country',
  state: 'state',
  city: 'city',
  zip: 'zip',
  currency: 'currency',
  post_watermark: 'post_watermark',
  total_followers: 'total_followers',
  total_following: 'total_following',
  total_subscribers: 'total_subscribers',
  active_status: 'active_status',
  max_post_count: 'max_post_count',
  hasPin: 'hasPin',
  created_at: 'created_at',
  updated_at: 'updated_at',
  show_active: 'show_active',
  watermarkEnabled: 'watermarkEnabled',
  delete_date: 'delete_date',
  should_delete: 'should_delete',
  flags: 'flags'
};

exports.Prisma.ParticipantsScalarFieldEnum = {
  id: 'id',
  user_1: 'user_1',
  user_2: 'user_2',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ConversationsScalarFieldEnum = {
  id: 'id',
  conversation_id: 'conversation_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  message_id: 'message_id',
  sender_id: 'sender_id',
  receiver_id: 'receiver_id',
  seen: 'seen',
  message: 'message',
  attachment: 'attachment',
  isSystemMessage: 'isSystemMessage',
  created_at: 'created_at',
  updated_at: 'updated_at',
  conversationsId: 'conversationsId',
  groupsId: 'groupsId',
  story_reply: 'story_reply'
};

exports.Prisma.OldUsernameScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  old_username: 'old_username',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ModelScalarFieldEnum = {
  id: 'id',
  firstname: 'firstname',
  lastname: 'lastname',
  user_id: 'user_id',
  gender: 'gender',
  dob: 'dob',
  country: 'country',
  hookup: 'hookup',
  payment_status: 'payment_status',
  payment_reference: 'payment_reference',
  verification_video: 'verification_video',
  verification_image: 'verification_image',
  verification_status: 'verification_status',
  verification_state: 'verification_state',
  token: 'token',
  created_at: 'created_at',
  watermark: 'watermark'
};

exports.Prisma.UploadedMediaScalarFieldEnum = {
  id: 'id',
  media_id: 'media_id',
  user_id: 'user_id',
  key: 'key',
  type: 'type',
  url: 'url',
  name: 'name',
  size: 'size',
  extension: 'extension',
  media_state: 'media_state',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserMediaScalarFieldEnum = {
  id: 'id',
  media_id: 'media_id',
  post_id: 'post_id',
  media_type: 'media_type',
  media_state: 'media_state',
  duration: 'duration',
  url: 'url',
  blur: 'blur',
  poster: 'poster',
  locked: 'locked',
  accessible_to: 'accessible_to',
  created_at: 'created_at',
  updated_at: 'updated_at',
  user_id: 'user_id'
};

exports.Prisma.UserRepostScalarFieldEnum = {
  id: 'id',
  repost_id: 'repost_id',
  user_id: 'user_id',
  post_id: 'post_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserStoryScalarFieldEnum = {
  id: 'id',
  story_id: 'story_id',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.StoryMediaScalarFieldEnum = {
  id: 'id',
  media_id: 'media_id',
  media_type: 'media_type',
  filename: 'filename',
  story_content: 'story_content',
  duration: 'duration',
  user_id: 'user_id',
  media_state: 'media_state',
  created_at: 'created_at',
  updated_at: 'updated_at',
  captionElements: 'captionElements',
  media_url: 'media_url'
};

exports.Prisma.StoryViewScalarFieldEnum = {
  id: 'id',
  story_media_id: 'story_media_id',
  viewer_id: 'viewer_id',
  viewed_at: 'viewed_at',
  userStoryId: 'userStoryId'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  was_repost: 'was_repost',
  repost_username: 'repost_username',
  repost_id: 'repost_id',
  user_id: 'user_id',
  content: 'content',
  media: 'media',
  post_price: 'post_price',
  post_status: 'post_status',
  post_audience: 'post_audience',
  post_is_visible: 'post_is_visible',
  post_likes: 'post_likes',
  post_comments: 'post_comments',
  post_reposts: 'post_reposts',
  post_impressions: 'post_impressions',
  created_at: 'created_at',
  updated_at: 'updated_at',
  watermark_enabled: 'watermark_enabled'
};

exports.Prisma.PostImpressionScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProfileViewScalarFieldEnum = {
  id: 'id',
  profile_id: 'profile_id',
  viewer_id: 'viewer_id',
  ip_address: 'ip_address',
  created_at: 'created_at'
};

exports.Prisma.CommentViewScalarFieldEnum = {
  id: 'id',
  comment_id: 'comment_id',
  user_id: 'user_id',
  ip_address: 'ip_address',
  created_at: 'created_at'
};

exports.Prisma.PostCommentScalarFieldEnum = {
  id: 'id',
  comment_id: 'comment_id',
  user_id: 'user_id',
  post_id: 'post_id',
  comment: 'comment',
  comment_impressions: 'comment_impressions',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CommentImpressionScalarFieldEnum = {
  id: 'id',
  comment_id: 'comment_id',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  postId: 'postId'
};

exports.Prisma.PostCommentAttachmentsScalarFieldEnum = {
  id: 'id',
  comment_id: 'comment_id',
  path: 'path',
  type: 'type',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PostCommentLikesScalarFieldEnum = {
  id: 'id',
  like_id: 'like_id',
  user_id: 'user_id',
  comment_id: 'comment_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PostLikeScalarFieldEnum = {
  id: 'id',
  like_id: 'like_id',
  user_id: 'user_id',
  post_id: 'post_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PostSharedScalarFieldEnum = {
  id: 'id',
  shared_id: 'shared_id',
  user_id: 'user_id',
  post_id: 'post_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.FollowScalarFieldEnum = {
  id: 'id',
  follow_id: 'follow_id',
  user_id: 'user_id',
  follower_id: 'follower_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SubscribersScalarFieldEnum = {
  id: 'id',
  sub_id: 'sub_id',
  user_id: 'user_id',
  subscriber_id: 'subscriber_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  status: 'status'
};

exports.Prisma.LiveStreamScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  username: 'username',
  stream_id: 'stream_id',
  stream_token: 'stream_token',
  user_stream_id: 'user_stream_id',
  title: 'title',
  stream_call_id: 'stream_call_id',
  stream_status: 'stream_status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LiveStreamParticipantsScalarFieldEnum = {
  id: 'id',
  stream_id: 'stream_id',
  host_id: 'host_id',
  participant_id: 'participant_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  liveStreamId: 'liveStreamId'
};

exports.Prisma.LiveStreamCommentScalarFieldEnum = {
  id: 'id',
  live_comment_id: 'live_comment_id',
  user_id: 'user_id',
  live_id: 'live_id',
  comment: 'comment',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LiveStreamLikeScalarFieldEnum = {
  id: 'id',
  live_like_id: 'live_like_id',
  user_id: 'user_id',
  live_id: 'live_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LiveStreamViewScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  live_id: 'live_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SettingsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  price_per_message: 'price_per_message',
  subscription_active: 'subscription_active',
  enable_free_message: 'enable_free_message',
  subscription_price: 'subscription_price',
  subscription_type: 'subscription_type',
  subscription_duration: 'subscription_duration',
  two_factor_auth: 'two_factor_auth',
  instagram_url: 'instagram_url',
  twitter_url: 'twitter_url',
  facebook_url: 'facebook_url',
  snapchat_url: 'snapchat_url',
  tiktok_url: 'tiktok_url',
  telegram_url: 'telegram_url',
  youtube_url: 'youtube_url',
  watermark_uid: 'watermark_uid',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.NotificationsScalarFieldEnum = {
  id: 'id',
  notification_id: 'notification_id',
  user_id: 'user_id',
  message: 'message',
  action: 'action',
  url: 'url',
  read: 'read',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReportUserScalarFieldEnum = {
  id: 'id',
  report_id: 'report_id',
  user_id: 'user_id',
  reported_id: 'reported_id',
  report_type: 'report_type',
  report: 'report',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReportPostScalarFieldEnum = {
  id: 'id',
  report_id: 'report_id',
  user_id: 'user_id',
  post_id: 'post_id',
  report_type: 'report_type',
  report: 'report',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReportCommentScalarFieldEnum = {
  id: 'id',
  report_id: 'report_id',
  user_id: 'user_id',
  comment_id: 'comment_id',
  report_type: 'report_type',
  report: 'report',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReportLiveScalarFieldEnum = {
  id: 'id',
  report_id: 'report_id',
  user_id: 'user_id',
  live_id: 'live_id',
  report_type: 'report_type',
  report: 'report',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReportMessageScalarFieldEnum = {
  id: 'id',
  report_id: 'report_id',
  user_id: 'user_id',
  message_id: 'message_id',
  report_type: 'report_type',
  report: 'report',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserPointsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  points: 'points',
  conversion_rate: 'conversion_rate',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PointConversionRateUsersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  pointConversionRateId: 'pointConversionRateId'
};

exports.Prisma.PointConversionRateScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  points: 'points'
};

exports.Prisma.UserWalletScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  wallet_id: 'wallet_id',
  balance: 'balance',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserTransactionScalarFieldEnum = {
  id: 'id',
  transaction_id: 'transaction_id',
  user_id: 'user_id',
  wallet_id: 'wallet_id',
  amount: 'amount',
  transaction_message: 'transaction_message',
  transaction: 'transaction',
  transaction_type: 'transaction_type',
  currency: 'currency',
  exchange_rate: 'exchange_rate',
  usd_equivalent: 'usd_equivalent',
  current_buy_value: 'current_buy_value',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ModelSubscriptionPackScalarFieldEnum = {
  id: 'id',
  subscription_id: 'subscription_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  user_id: 'user_id'
};

exports.Prisma.ModelSubscriptionTierScalarFieldEnum = {
  id: 'id',
  subscription_id: 'subscription_id',
  tier_name: 'tier_name',
  tier_price: 'tier_price',
  tier_description: 'tier_description',
  tier_duration: 'tier_duration',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserSubscriptionCurrentScalarFieldEnum = {
  id: 'id',
  subscription_id: 'subscription_id',
  user_id: 'user_id',
  model_id: 'model_id',
  subscription: 'subscription',
  created_at: 'created_at',
  updated_at: 'updated_at',
  userId: 'userId',
  ends_at: 'ends_at'
};

exports.Prisma.UserSubscriptionHistoryScalarFieldEnum = {
  id: 'id',
  subscription_id: 'subscription_id',
  user_id: 'user_id',
  model_id: 'model_id',
  subscription: 'subscription',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserLocationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  latitude: 'latitude',
  longitude: 'longitude',
  city: 'city',
  state: 'state',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.GlobalPointsBuyScalarFieldEnum = {
  id: 'id',
  points_buy_id: 'points_buy_id',
  points: 'points',
  amount: 'amount',
  conversion_rate: 'conversion_rate',
  currency: 'currency',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserWithdrawalBankAccountScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  bank_account_id: 'bank_account_id',
  bank_name: 'bank_name',
  account_name: 'account_name',
  account_number: 'account_number',
  bank_type: 'bank_type',
  routing_number: 'routing_number',
  bank_country: 'bank_country',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserPointsPurchaseScalarFieldEnum = {
  id: 'id',
  purchase_id: 'purchase_id',
  user_id: 'user_id',
  points: 'points',
  amount: 'amount',
  currency: 'currency',
  exchange_rate: 'exchange_rate',
  usd_equivalent: 'usd_equivalent',
  current_buy_value: 'current_buy_value',
  success: 'success',
  created_at: 'created_at',
  updated_at: 'updated_at',
  userPointsId: 'userPointsId'
};

exports.Prisma.UserAttachmentsScalarFieldEnum = {
  id: 'id',
  path: 'path',
  type: 'type',
  name: 'name',
  size: 'size',
  extension: 'extension',
  created_at: 'created_at',
  updated_at: 'updated_at',
  user_id: 'user_id'
};

exports.Prisma.UserBanksScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  bank_id: 'bank_id',
  bank_name: 'bank_name',
  account_name: 'account_name',
  account_number: 'account_number',
  bank_type: 'bank_type',
  routing_number: 'routing_number',
  swift_code: 'swift_code',
  bank_country: 'bank_country',
  recipient_code: 'recipient_code',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.ProductSizeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  user_id: 'user_id',
  name: 'name',
  description: 'description',
  price: 'price',
  category_id: 'category_id',
  instock: 'instock'
};

exports.Prisma.ProductSizePivotScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  size_id: 'size_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductImagesScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  image_url: 'image_url',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id',
  quantity: 'quantity',
  size_id: 'size_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.WishListScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  user_id: 'user_id',
  total_amount: 'total_amount',
  created_at: 'created_at',
  updated_at: 'updated_at',
  payment_reference: 'payment_reference',
  payment_status: 'payment_status',
  shipping_address: 'shipping_address',
  status: 'status'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  quantity: 'quantity',
  price: 'price',
  size_id: 'size_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PendingCheckoutScalarFieldEnum = {
  id: 'id',
  reference: 'reference',
  user_id: 'user_id',
  order_data: 'order_data',
  created_at: 'created_at',
  expires_at: 'expires_at'
};

exports.Prisma.HelpCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.HelpArticlesScalarFieldEnum = {
  id: 'id',
  article_id: 'article_id',
  category_id: 'category_id',
  title: 'title',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.HelpContactScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  subject: 'subject',
  message: 'message',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.FAQScalarFieldEnum = {
  id: 'id',
  question: 'question',
  created_at: 'created_at'
};

exports.Prisma.FAQAnswersScalarFieldEnum = {
  id: 'id',
  faq_id: 'faq_id',
  answer: 'answer',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  messageId: 'messageId',
  created_at: 'created_at'
};

exports.Prisma.GroupsScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  created_at: 'created_at',
  description: 'description',
  groupIcon: 'groupIcon',
  groupType: 'groupType',
  isActive: 'isActive',
  name: 'name',
  updated_at: 'updated_at'
};

exports.Prisma.GroupMessageScalarFieldEnum = {
  id: 'id',
  content: 'content',
  senderId: 'senderId',
  created_at: 'created_at',
  editedAt: 'editedAt',
  groupId: 'groupId',
  isEdited: 'isEdited',
  messageType: 'messageType',
  replyToId: 'replyToId',
  deliveryStatus: 'deliveryStatus',
  updated_at: 'updated_at'
};

exports.Prisma.GroupAttachmentScalarFieldEnum = {
  id: 'id',
  url: 'url',
  type: 'type',
  messageId: 'messageId',
  created_at: 'created_at',
  fileName: 'fileName',
  fileSize: 'fileSize'
};

exports.Prisma.GroupSettingsScalarFieldEnum = {
  id: 'id',
  allowFileSharing: 'allowFileSharing',
  allowMediaSharing: 'allowMediaSharing',
  allowMemberInvites: 'allowMemberInvites',
  autoApproveJoinReqs: 'autoApproveJoinReqs',
  created_at: 'created_at',
  groupId: 'groupId',
  moderateMessages: 'moderateMessages',
  mutedUntil: 'mutedUntil',
  updated_at: 'updated_at'
};

exports.Prisma.BlockedGroupParticipantScalarFieldEnum = {
  id: 'id',
  blockedBy: 'blockedBy',
  created_at: 'created_at',
  groupId: 'groupId',
  reason: 'reason',
  updated_at: 'updated_at',
  userId: 'userId'
};

exports.Prisma.GroupMemberScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  groupId: 'groupId',
  role: 'role',
  joinedAt: 'joinedAt',
  lastSeen: 'lastSeen',
  isMuted: 'isMuted',
  mutedBy: 'mutedBy',
  mutedUntil: 'mutedUntil',
  isBlocked: 'isBlocked',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ActivityLogScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  action: 'action',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LoginHistoryScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  ip_address: 'ip_address',
  device: 'device',
  city: 'city',
  state: 'state',
  capital: 'capital',
  country: 'country',
  countryCode: 'countryCode',
  continent: 'continent',
  longitude: 'longitude',
  latitude: 'latitude',
  location: 'location',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TwoFactorAuthScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  code: 'code',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BatchProcessLogsScalarFieldEnum = {
  id: 'id',
  job_id: 'job_id',
  job_name: 'job_name',
  job_data: 'job_data'
};

exports.Prisma.ResetPasswordRequestsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  password: 'password',
  reset_code: 'reset_code',
  completed: 'completed',
  expires_at: 'expires_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.WithdrawalRequestCodeScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  code: 'code',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.WithdrawalRequestScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  amount: 'amount',
  recipient_code: 'recipient_code',
  bank_account_id: 'bank_account_id',
  reason: 'reason',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  reference: 'reference',
  transfer_code: 'transfer_code',
  paystack_response: 'paystack_response'
};

exports.Prisma.PlatformExchangeRateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  buyValue: 'buyValue',
  sellValue: 'sellValue',
  rate: 'rate',
  symbol: 'symbol',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OuterPagesScalarFieldEnum = {
  id: 'id',
  page_id: 'page_id',
  slug: 'slug',
  title: 'title',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SupportTicketsScalarFieldEnum = {
  id: 'id',
  ticket_id: 'ticket_id',
  user_id: 'user_id',
  subject: 'subject',
  message: 'message',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SupportTicketRepliesScalarFieldEnum = {
  id: 'id',
  ticket_id: 'ticket_id',
  user_id: 'user_id',
  message: 'message',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ConfigurationsScalarFieldEnum = {
  id: 'id',
  app_name: 'app_name',
  app_version: 'app_version',
  app_url: 'app_url',
  app_description: 'app_description',
  app_logo: 'app_logo',
  default_currency: 'default_currency',
  default_rate: 'default_rate',
  default_symbol: 'default_symbol',
  point_conversion_rate: 'point_conversion_rate',
  point_conversion_rate_ngn: 'point_conversion_rate_ngn',
  min_withdrawal_amount: 'min_withdrawal_amount',
  min_withdrawal_amount_ngn: 'min_withdrawal_amount_ngn',
  min_deposit_amount: 'min_deposit_amount',
  min_deposit_amount_ngn: 'min_deposit_amount_ngn',
  default_mode: 'default_mode',
  primary_color: 'primary_color',
  secondary_color: 'secondary_color',
  accent_color: 'accent_color',
  home_feed_limit: 'home_feed_limit',
  personal_profile_limit: 'personal_profile_limit',
  personal_media_limit: 'personal_media_limit',
  personal_repost_limit: 'personal_repost_limit',
  post_page_comment_limit: 'post_page_comment_limit',
  post_page_comment_reply_limit: 'post_page_comment_reply_limit',
  other_user_profile_limit: 'other_user_profile_limit',
  other_user_media_limit: 'other_user_media_limit',
  other_user_repost_limit: 'other_user_repost_limit',
  notification_limit: 'notification_limit',
  transaction_limit: 'transaction_limit',
  model_search_limit: 'model_search_limit',
  conversation_limit: 'conversation_limit',
  message_limit: 'message_limit',
  group_message_limit: 'group_message_limit',
  group_participant_limit: 'group_participant_limit',
  group_limit: 'group_limit',
  hookup_enabled: 'hookup_enabled',
  hookup_page_limit: 'hookup_page_limit',
  status_limit: 'status_limit',
  subscription_limit: 'subscription_limit',
  subscribers_limit: 'subscribers_limit',
  active_subscribers_limit: 'active_subscribers_limit',
  followers_limit: 'followers_limit',
  upload_media_limit: 'upload_media_limit',
  model_upload_media_limit: 'model_upload_media_limit',
  profile_updated_success_message: 'profile_updated_success_message',
  profile_updated_error_message: 'profile_updated_error_message',
  profile_updating_message: 'profile_updating_message',
  profile_image_updated_success_message: 'profile_image_updated_success_message',
  profile_image_updated_error_message: 'profile_image_updated_error_message',
  profile_image_updating_message: 'profile_image_updating_message',
  point_purchase_success_message: 'point_purchase_success_message',
  point_purchase_error_message: 'point_purchase_error_message',
  point_purchasing_message: 'point_purchasing_message',
  point_purchase_minimum_message: 'point_purchase_minimum_message',
  welcome_message_title: 'welcome_message_title',
  welcome_message_content: 'welcome_message_content',
  welcome_message_enabled: 'welcome_message_enabled',
  welcome_message_delay: 'welcome_message_delay',
  created_at: 'created_at',
  updated_at: 'updated_at',
  platform_deposit_fee: 'platform_deposit_fee',
  platform_withdrawal_fee: 'platform_withdrawal_fee'
};

exports.Prisma.PostGiftScalarFieldEnum = {
  id: 'id',
  gifter_id: 'gifter_id',
  receiver_id: 'receiver_id',
  post_id: 'post_id',
  points: 'points',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserWithdrawalPinScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  pin: 'pin',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserBlockScalarFieldEnum = {
  id: 'id',
  block_id: 'block_id',
  blocker_id: 'blocker_id',
  blocked_id: 'blocked_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PurchasedPostsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  post_id: 'post_id',
  purchase_id: 'purchase_id',
  price: 'price',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.AutomatedMessageScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  message_type: 'message_type',
  message_text: 'message_text',
  attachments: 'attachments',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.GroupMessageReadScalarFieldEnum = {
  id: 'id',
  messageId: 'messageId',
  userId: 'userId',
  readAt: 'readAt'
};

exports.Prisma.GroupJoinRequestScalarFieldEnum = {
  id: 'id',
  groupId: 'groupId',
  userId: 'userId',
  message: 'message',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.GroupInvitationScalarFieldEnum = {
  id: 'id',
  groupId: 'groupId',
  inviterId: 'inviterId',
  inviteeId: 'inviteeId',
  message: 'message',
  status: 'status',
  expiresAt: 'expiresAt',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReferralsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  referral_id: 'referral_id',
  code: 'code',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReferralEarningsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  points: 'points',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ConversationFreeMessageScalarFieldEnum = {
  id: 'id',
  conversation_id: 'conversation_id',
  user_id: 'user_id',
  enabled: 'enabled',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.WithdrawalRequestStatus = exports.$Enums.WithdrawalRequestStatus = {
  pending: 'pending',
  processing: 'processing',
  rejected: 'rejected',
  completed: 'completed',
  approved: 'approved'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  pending: 'pending',
  processing: 'processing',
  shipped: 'shipped',
  delivered: 'delivered',
  cancelled: 'cancelled'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  pending: 'pending',
  paid: 'paid',
  failed: 'failed'
};

exports.UserRole = exports.$Enums.UserRole = {
  fan: 'fan',
  model: 'model',
  admin: 'admin',
  support: 'support'
};

exports.PostAudience = exports.$Enums.PostAudience = {
  public: 'public',
  private: 'private',
  price: 'price',
  followers: 'followers',
  subscribers: 'subscribers'
};

exports.PostStatus = exports.$Enums.PostStatus = {
  pending: 'pending',
  approved: 'approved',
  rejected: 'rejected'
};

exports.TransactionType = exports.$Enums.TransactionType = {
  credit: 'credit',
  debit: 'debit',
  pending: 'pending',
  referral: 'referral'
};

exports.NotificationTypes = exports.$Enums.NotificationTypes = {
  follow: 'follow',
  like: 'like',
  purchase: 'purchase',
  comment: 'comment',
  repost: 'repost',
  message: 'message',
  live: 'live',
  sparkle: 'sparkle'
};

exports.VerificationStateEnum = exports.$Enums.VerificationStateEnum = {
  not_started: 'not_started',
  started: 'started',
  pending: 'pending',
  approved: 'approved',
  rejected: 'rejected'
};

exports.MediaState = exports.$Enums.MediaState = {
  processing: 'processing',
  completed: 'completed',
  failed: 'failed'
};

exports.GroupType = exports.$Enums.GroupType = {
  PUBLIC: 'PUBLIC',
  PRIVATE: 'PRIVATE',
  SECRET: 'SECRET'
};

exports.GroupMemberRole = exports.$Enums.GroupMemberRole = {
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR',
  MEMBER: 'MEMBER'
};

exports.AutomatedMessageType = exports.$Enums.AutomatedMessageType = {
  followers: 'followers',
  subscribers: 'subscribers'
};

exports.JoinRequestStatus = exports.$Enums.JoinRequestStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.InvitationStatus = exports.$Enums.InvitationStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  DECLINED: 'DECLINED',
  EXPIRED: 'EXPIRED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Participants: 'Participants',
  Conversations: 'Conversations',
  Messages: 'Messages',
  OldUsername: 'OldUsername',
  Model: 'Model',
  UploadedMedia: 'UploadedMedia',
  UserMedia: 'UserMedia',
  UserRepost: 'UserRepost',
  UserStory: 'UserStory',
  StoryMedia: 'StoryMedia',
  StoryView: 'StoryView',
  Post: 'Post',
  PostImpression: 'PostImpression',
  ProfileView: 'ProfileView',
  CommentView: 'CommentView',
  PostComment: 'PostComment',
  CommentImpression: 'CommentImpression',
  PostCommentAttachments: 'PostCommentAttachments',
  PostCommentLikes: 'PostCommentLikes',
  PostLike: 'PostLike',
  PostShared: 'PostShared',
  Follow: 'Follow',
  Subscribers: 'Subscribers',
  LiveStream: 'LiveStream',
  LiveStreamParticipants: 'LiveStreamParticipants',
  LiveStreamComment: 'LiveStreamComment',
  LiveStreamLike: 'LiveStreamLike',
  LiveStreamView: 'LiveStreamView',
  Settings: 'Settings',
  Notifications: 'Notifications',
  ReportUser: 'ReportUser',
  ReportPost: 'ReportPost',
  ReportComment: 'ReportComment',
  ReportLive: 'ReportLive',
  ReportMessage: 'ReportMessage',
  UserPoints: 'UserPoints',
  PointConversionRateUsers: 'PointConversionRateUsers',
  PointConversionRate: 'PointConversionRate',
  UserWallet: 'UserWallet',
  UserTransaction: 'UserTransaction',
  ModelSubscriptionPack: 'ModelSubscriptionPack',
  ModelSubscriptionTier: 'ModelSubscriptionTier',
  UserSubscriptionCurrent: 'UserSubscriptionCurrent',
  UserSubscriptionHistory: 'UserSubscriptionHistory',
  UserLocation: 'UserLocation',
  GlobalPointsBuy: 'GlobalPointsBuy',
  UserWithdrawalBankAccount: 'UserWithdrawalBankAccount',
  UserPointsPurchase: 'UserPointsPurchase',
  UserAttachments: 'UserAttachments',
  UserBanks: 'UserBanks',
  ProductCategory: 'ProductCategory',
  ProductSize: 'ProductSize',
  Product: 'Product',
  ProductSizePivot: 'ProductSizePivot',
  ProductImages: 'ProductImages',
  Cart: 'Cart',
  WishList: 'WishList',
  Order: 'Order',
  OrderItem: 'OrderItem',
  PendingCheckout: 'PendingCheckout',
  HelpCategory: 'HelpCategory',
  HelpArticles: 'HelpArticles',
  HelpContact: 'HelpContact',
  FAQ: 'FAQ',
  FAQAnswers: 'FAQAnswers',
  Tag: 'Tag',
  Groups: 'Groups',
  GroupMessage: 'GroupMessage',
  GroupAttachment: 'GroupAttachment',
  GroupSettings: 'GroupSettings',
  BlockedGroupParticipant: 'BlockedGroupParticipant',
  GroupMember: 'GroupMember',
  ActivityLog: 'ActivityLog',
  LoginHistory: 'LoginHistory',
  TwoFactorAuth: 'TwoFactorAuth',
  BatchProcessLogs: 'BatchProcessLogs',
  ResetPasswordRequests: 'ResetPasswordRequests',
  WithdrawalRequestCode: 'WithdrawalRequestCode',
  WithdrawalRequest: 'WithdrawalRequest',
  PlatformExchangeRate: 'PlatformExchangeRate',
  OuterPages: 'OuterPages',
  SupportTickets: 'SupportTickets',
  SupportTicketReplies: 'SupportTicketReplies',
  Configurations: 'Configurations',
  PostGift: 'PostGift',
  UserWithdrawalPin: 'UserWithdrawalPin',
  UserBlock: 'UserBlock',
  PurchasedPosts: 'PurchasedPosts',
  AutomatedMessage: 'AutomatedMessage',
  GroupMessageRead: 'GroupMessageRead',
  GroupJoinRequest: 'GroupJoinRequest',
  GroupInvitation: 'GroupInvitation',
  Referrals: 'Referrals',
  ReferralEarnings: 'ReferralEarnings',
  ConversationFreeMessage: 'ConversationFreeMessage'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/dikewisdom/Documents/Projects/paymefans/server/prisma/generated",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/dikewisdom/Documents/Projects/paymefans/server/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "..",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../prisma/generated\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                        Int                         @id @default(autoincrement())\n  email                     String                      @unique\n  name                      String\n  password                  String\n  fullname                  String\n  user_id                   String                      @unique\n  username                  String                      @unique\n  admin                     Boolean                     @default(false)\n  role                      UserRole                    @default(fan)\n  is_active                 Boolean                     @default(false)\n  is_verified               Boolean                     @default(false)\n  is_email_verified         Boolean                     @default(false)\n  is_model                  Boolean                     @default(false)\n  email_verify_code         String?\n  email_verify_time         DateTime?\n  is_phone_verified         Boolean                     @default(false)\n  phone                     String                      @unique\n  profile_image             String?                     @default(\"/site/avatar.png\")\n  profile_banner            String?                     @default(\"/site/banner.png\")\n  bio                       String?\n  location                  String?\n  website                   String?\n  country                   String?\n  state                     String?\n  city                      String?\n  zip                       String?\n  currency                  String?                     @default(\"NGN\")\n  post_watermark            String?\n  total_followers           Int                         @default(0)\n  total_following           Int                         @default(0)\n  total_subscribers         Int                         @default(0)\n  active_status             Boolean                     @default(true)\n  max_post_count            Int                         @default(0)\n  hasPin                    Boolean                     @default(false)\n  created_at                DateTime                    @default(now())\n  updated_at                DateTime                    @updatedAt\n  show_active               Boolean                     @default(true)\n  watermarkEnabled          Boolean                     @default(true)\n  delete_date               DateTime?\n  should_delete             Boolean                     @default(false)\n  flags                     Json?                       @default(\"[]\")\n  ActivityLog               ActivityLog[]\n  AutomatedMessage          AutomatedMessage[]\n  blockedUsers              BlockedGroupParticipant[]   @relation(\"BlockedByUser\")\n  blockedFromGroups         BlockedGroupParticipant[]   @relation(\"BlockedUser\")\n  Cart                      Cart[]\n  CommentImpression         CommentImpression[]\n  CommentViews              CommentView[]               @relation(\"CommentViews\")\n  Followers                 Follow[]                    @relation(\"Followers\")\n  Follow                    Follow[]\n  mutedUsers                GroupMember[]               @relation(\"MutedByUser\")\n  groupMemberships          GroupMember[]               @relation(\"GroupMembers\")\n  GroupMessage              GroupMessage[]\n  adminGroups               Groups[]                    @relation(\"GroupAdmin\")\n  HelpContact               HelpContact[]\n  LiveStream                LiveStream[]\n  LiveStreamComment         LiveStreamComment[]\n  LiveStreamLike            LiveStreamLike[]\n  LiveStreamView            LiveStreamView[]\n  LoginHistory              LoginHistory[]\n  receivedMessages          Messages[]                  @relation(\"MessageReceiver\")\n  sentMessages              Messages[]                  @relation(\"MessageSender\")\n  Model                     Model?\n  ModelSubscriptionPack     ModelSubscriptionPack?\n  Notifications             Notifications[]\n  Order                     Order[]\n  PendingCheckout           PendingCheckout[]\n  PointConversionRateUsers  PointConversionRateUsers[]\n  Post                      Post[]\n  PostComment               PostComment[]\n  PostCommentLikes          PostCommentLikes[]\n  Gifter                    PostGift[]                  @relation(\"Gifter\")\n  GiftReciver               PostGift[]                  @relation(\"GiftReceiver\")\n  PostImpression            PostImpression[]\n  PostLike                  PostLike[]\n  PostShared                PostShared[]\n  ProfileViewsReceived      ProfileView[]               @relation(\"ProfileViewed\")\n  ProfileViewsGiven         ProfileView[]               @relation(\"ProfileViewer\")\n  PurchasedPosts            PurchasedPosts[]\n  ReportComment             ReportComment[]\n  ReportLive                ReportLive[]\n  ReportMessage             ReportMessage[]\n  ReportPost                ReportPost[]\n  ReportUser                ReportUser[]\n  ResetPasswordRequests     ResetPasswordRequests[]\n  Settings                  Settings?\n  StoryViews                StoryView[]                 @relation(\"StoryViews\")\n  UserSubscribers           Subscribers[]               @relation(\"Subscribers\")\n  Subscribers               Subscribers[]\n  SupportTicketReplies      SupportTicketReplies[]\n  SupportTickets            SupportTickets[]\n  Tag                       Tag[]\n  TwoFactorAuth             TwoFactorAuth[]\n  UserAttachments           UserAttachments[]\n  UserBanks                 UserBanks[]\n  BlockedUsersList          UserBlock[]                 @relation(\"UserBlocked\")\n  BlockedByUsers            UserBlock[]                 @relation(\"UserBlocker\")\n  UserLocation              UserLocation?\n  UserMedia                 UserMedia[]\n  UserPoints                UserPoints?\n  UserRepost                UserRepost[]\n  UserStory                 UserStory[]\n  ModelSubscriptionCurrent  UserSubscriptionCurrent[]   @relation(\"ModelCurrentSubscriptions\")\n  UserSubscriptionCurrent   UserSubscriptionCurrent[]   @relation(\"UserCurrentSubscription\")\n  UserSubscriptionHistory   UserSubscriptionHistory[]   @relation(\"UserSubscriptionHistory\")\n  UserSubscription          UserSubscriptionHistory[]   @relation(\"UserSubscription\")\n  UserTransaction           UserTransaction[]\n  UserWallet                UserWallet?\n  UserWithdrawalBankAccount UserWithdrawalBankAccount[]\n  UserWithdrawalPin         UserWithdrawalPin[]\n  WishList                  WishList[]\n  WithdrawalRequest         WithdrawalRequest[]\n  WithWithdrawalRequestCode WithdrawalRequestCode[]\n  GroupMessageRead          GroupMessageRead[]\n  GroupJoinRequests         GroupJoinRequest[]          @relation(\"GroupJoinRequests\")\n  GroupInvitationsSent      GroupInvitation[]           @relation(\"GroupInvitationsSent\")\n  GroupInvitationsReceived  GroupInvitation[]           @relation(\"GroupInvitationsReceived\")\n  OldUsernames              OldUsername[]\n  ConversationFreeMessages  ConversationFreeMessage[]\n  ReferralEarnings          ReferralEarnings[]\n  Referrals                 Referrals[]                 @relation(\"UserReferrals\")\n  Referrer                  Referrals[]                 @relation(\"Referrer\")\n  UploadedMedia             UploadedMedia[]\n}\n\nmodel Participants {\n  id            Int             @id @default(autoincrement())\n  user_1        String\n  user_2        String\n  created_at    DateTime        @default(now())\n  updated_at    DateTime        @updatedAt\n  Conversations Conversations[] @relation(\"ConversationsToParticipants\")\n}\n\nmodel Conversations {\n  id              Int            @id @default(autoincrement())\n  conversation_id String         @unique\n  created_at      DateTime       @default(now())\n  updated_at      DateTime       @updatedAt\n  messages        Messages[]\n  participants    Participants[] @relation(\"ConversationsToParticipants\")\n}\n\nmodel Messages {\n  id              Int             @id @default(autoincrement())\n  message_id      String          @unique\n  sender_id       String\n  receiver_id     String\n  seen            Boolean         @default(false)\n  message         String\n  attachment      Json?\n  isSystemMessage Boolean         @default(false)\n  created_at      DateTime        @default(now())\n  updated_at      DateTime        @updatedAt\n  conversationsId String?\n  groupsId        Int?\n  story_reply     Json?\n  Conversations   Conversations?  @relation(fields: [conversationsId], references: [conversation_id])\n  receiver        User            @relation(\"MessageReceiver\", fields: [receiver_id], references: [user_id], onDelete: Cascade)\n  sender          User            @relation(\"MessageSender\", fields: [sender_id], references: [user_id], onDelete: Cascade)\n  ReportMessage   ReportMessage[]\n\n  @@index([sender_id])\n  @@index([receiver_id])\n}\n\nmodel OldUsername {\n  id           Int      @id @default(autoincrement())\n  user_id      Int\n  old_username String?\n  created_at   DateTime @default(now())\n  updated_at   DateTime @updatedAt\n  user         User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n  @@index([old_username])\n}\n\nmodel Model {\n  id                  Int                   @id @default(autoincrement())\n  firstname           String\n  lastname            String\n  user_id             Int                   @unique\n  gender              String\n  dob                 DateTime\n  country             String\n  hookup              Boolean               @default(false)\n  payment_status      Boolean               @default(false)\n  payment_reference   String?               @unique\n  verification_video  String?\n  verification_image  String?\n  verification_status Boolean               @default(false)\n  verification_state  VerificationStateEnum @default(not_started)\n  token               String?               @unique\n  created_at          DateTime              @default(now())\n  watermark           String?               @default(\"/site/watermark.png\")\n  user                User                  @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel UploadedMedia {\n  id          Int        @id @default(autoincrement())\n  media_id    String     @unique\n  user_id     Int\n  key         String?\n  type        String\n  url         String?\n  name        String\n  size        Int?\n  extension   String?\n  media_state MediaState @default(processing)\n  created_at  DateTime   @default(now())\n  updated_at  DateTime   @updatedAt\n  user        User       @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel UserMedia {\n  id            Int        @id @default(autoincrement())\n  media_id      String     @unique\n  post_id       Int\n  media_type    String\n  media_state   MediaState @default(processing)\n  duration      String?    @default(\"\")\n  url           String\n  blur          String\n  poster        String\n  locked        Boolean    @default(false)\n  accessible_to String\n  created_at    DateTime   @default(now())\n  updated_at    DateTime   @updatedAt\n  user_id       Int\n  post          Post       @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user          User       @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([post_id])\n}\n\nmodel UserRepost {\n  id         Int      @id @default(autoincrement())\n  repost_id  String\n  user_id    Int\n  post_id    Int\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  post       Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([post_id])\n  @@index([user_id])\n}\n\nmodel UserStory {\n  id         Int          @id @default(autoincrement())\n  story_id   String       @unique\n  user_id    Int\n  created_at DateTime     @default(now())\n  updated_at DateTime     @updatedAt\n  StoryMedia StoryMedia[]\n  StoryView  StoryView[]\n  user       User         @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel StoryMedia {\n  id              Int         @id @default(autoincrement())\n  media_id        String      @unique\n  media_type      String\n  filename        String\n  story_content   String?\n  duration        Int?\n  user_id         Int\n  media_state     MediaState  @default(processing)\n  created_at      DateTime    @default(now())\n  updated_at      DateTime    @updatedAt\n  captionElements Json?\n  media_url       String?\n  story           UserStory   @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  StoryView       StoryView[]\n}\n\nmodel StoryView {\n  id             Int        @id @default(autoincrement())\n  story_media_id String\n  viewer_id      Int\n  viewed_at      DateTime   @default(now())\n  userStoryId    Int?\n  story_media    StoryMedia @relation(fields: [story_media_id], references: [media_id], onDelete: Cascade)\n  UserStory      UserStory? @relation(fields: [userStoryId], references: [id])\n  viewer         User       @relation(\"StoryViews\", fields: [viewer_id], references: [id], onDelete: Cascade)\n\n  @@unique([story_media_id, viewer_id])\n  @@index([story_media_id])\n  @@index([viewer_id])\n}\n\nmodel Post {\n  id                Int              @id @default(autoincrement())\n  post_id           String\n  was_repost        Boolean          @default(false)\n  repost_username   String?          @default(\"\")\n  repost_id         String?          @default(\"\")\n  user_id           Int\n  content           String?\n  media             Json?\n  post_price        Float?           @default(0)\n  post_status       PostStatus       @default(pending)\n  post_audience     PostAudience\n  post_is_visible   Boolean          @default(true)\n  post_likes        Int              @default(0)\n  post_comments     Int              @default(0)\n  post_reposts      Int              @default(0)\n  post_impressions  Int              @default(0)\n  created_at        DateTime         @default(now())\n  updated_at        DateTime         @updatedAt\n  watermark_enabled Boolean          @default(false)\n  user              User             @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  PostComment       PostComment[]\n  PostGift          PostGift[]\n  PostImpression    PostImpression[]\n  PostLike          PostLike[]\n  PostShared        PostShared[]\n  PurchasedPosts    PurchasedPosts[]\n  ReportPost        ReportPost[]\n  UserMedia         UserMedia[]\n  UserRepost        UserRepost[]\n}\n\nmodel PostImpression {\n  id         Int      @id @default(autoincrement())\n  post_id    Int\n  user_id    Int\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  post       Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([post_id])\n  @@index([user_id])\n}\n\nmodel ProfileView {\n  id         Int      @id @default(autoincrement())\n  profile_id Int\n  viewer_id  Int?\n  ip_address String?\n  created_at DateTime @default(now())\n  profile    User     @relation(\"ProfileViewed\", fields: [profile_id], references: [id], onDelete: Cascade)\n  viewer     User?    @relation(\"ProfileViewer\", fields: [viewer_id], references: [id], onDelete: Cascade)\n\n  @@index([profile_id])\n  @@index([viewer_id])\n  @@index([created_at])\n}\n\nmodel CommentView {\n  id         Int         @id @default(autoincrement())\n  comment_id Int\n  user_id    Int?\n  ip_address String?\n  created_at DateTime    @default(now())\n  comment    PostComment @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  user       User?       @relation(\"CommentViews\", fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([comment_id, user_id, ip_address])\n  @@index([comment_id])\n  @@index([user_id])\n  @@index([created_at])\n}\n\nmodel PostComment {\n  id                     Int                      @id @default(autoincrement())\n  comment_id             String\n  user_id                Int\n  post_id                Int\n  comment                String\n  comment_impressions    Int                      @default(0)\n  created_at             DateTime                 @default(now())\n  updated_at             DateTime                 @updatedAt\n  CommentImpression      CommentImpression[]\n  CommentView            CommentView[]\n  post                   Post                     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user                   User                     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  PostCommentAttachments PostCommentAttachments[]\n  PostCommentLikes       PostCommentLikes[]\n  ReportComment          ReportComment[]\n\n  @@index([post_id])\n  @@index([created_at])\n}\n\nmodel CommentImpression {\n  id         Int         @id @default(autoincrement())\n  comment_id Int\n  user_id    Int\n  created_at DateTime    @default(now())\n  updated_at DateTime    @updatedAt\n  postId     Int?\n  comment    PostComment @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  user       User        @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([comment_id])\n  @@index([user_id])\n}\n\nmodel PostCommentAttachments {\n  id         Int         @id @default(autoincrement())\n  comment_id Int\n  path       String\n  type       String\n  name       String\n  created_at DateTime    @default(now())\n  updated_at DateTime    @updatedAt\n  Comment    PostComment @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n}\n\nmodel PostCommentLikes {\n  id         Int         @id @default(autoincrement())\n  like_id    String      @default(cuid())\n  user_id    Int\n  comment_id Int\n  created_at DateTime    @default(now())\n  updated_at DateTime    @updatedAt\n  comment    PostComment @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  user       User        @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([comment_id])\n  @@index([user_id])\n}\n\nmodel PostLike {\n  id         Int      @id @default(autoincrement())\n  like_id    Int\n  user_id    Int\n  post_id    Int\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  post       Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([post_id])\n  @@index([user_id])\n}\n\nmodel PostShared {\n  id         Int      @id @default(autoincrement())\n  shared_id  String\n  user_id    Int?\n  post_id    Int\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  post       Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user       User?    @relation(fields: [user_id], references: [id])\n\n  @@index([post_id])\n  @@index([user_id])\n}\n\nmodel Follow {\n  id          Int      @id @default(autoincrement())\n  follow_id   String   @unique\n  user_id     Int\n  follower_id Int\n  created_at  DateTime @default(now())\n  updated_at  DateTime @updatedAt\n  followers   User     @relation(\"Followers\", fields: [follower_id], references: [id], onDelete: Cascade)\n  users       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel Subscribers {\n  id            Int      @id @default(autoincrement())\n  sub_id        String\n  user_id       Int\n  subscriber_id Int\n  created_at    DateTime @default(now())\n  updated_at    DateTime @updatedAt\n  status        String   @default(\"active\")\n  subscriber    User     @relation(\"Subscribers\", fields: [subscriber_id], references: [id], onDelete: Cascade)\n  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel LiveStream {\n  id                Int                      @id @default(autoincrement())\n  user_id           String\n  username          String\n  stream_id         String                   @unique\n  stream_token      String\n  user_stream_id    String\n  title             String\n  stream_call_id    String\n  stream_status     String                   @default(\"offline\")\n  created_at        DateTime                 @default(now())\n  updated_at        DateTime                 @updatedAt\n  user              User                     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)\n  LiveStreamComment LiveStreamComment[]\n  LiveStreamLike    LiveStreamLike[]\n  participants      LiveStreamParticipants[]\n  LiveStreamView    LiveStreamView[]\n  ReportLive        ReportLive[]\n\n  @@index([user_id])\n}\n\nmodel LiveStreamParticipants {\n  id             Int         @id @default(autoincrement())\n  stream_id      String\n  host_id        String\n  participant_id String\n  created_at     DateTime    @default(now())\n  updated_at     DateTime    @updatedAt\n  liveStreamId   Int?\n  LiveStream     LiveStream? @relation(fields: [liveStreamId], references: [id])\n}\n\nmodel LiveStreamComment {\n  id              Int        @id @default(autoincrement())\n  live_comment_id String\n  user_id         Int\n  live_id         Int\n  comment         String\n  created_at      DateTime   @default(now())\n  updated_at      DateTime   @updatedAt\n  live            LiveStream @relation(fields: [live_id], references: [id], onDelete: Cascade)\n  user            User       @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([live_id])\n  @@index([user_id])\n}\n\nmodel LiveStreamLike {\n  id           Int        @id @default(autoincrement())\n  live_like_id String\n  user_id      Int\n  live_id      Int\n  created_at   DateTime   @default(now())\n  updated_at   DateTime   @updatedAt\n  live         LiveStream @relation(fields: [live_id], references: [id], onDelete: Cascade)\n  user         User       @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([live_id])\n  @@index([user_id])\n}\n\nmodel LiveStreamView {\n  id         Int        @id @default(autoincrement())\n  user_id    Int\n  live_id    Int\n  created_at DateTime   @default(now())\n  updated_at DateTime   @updatedAt\n  live       LiveStream @relation(fields: [live_id], references: [id], onDelete: Cascade)\n  user       User       @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel Settings {\n  id                    Int      @id @default(autoincrement())\n  user_id               Int      @unique\n  price_per_message     Float\n  subscription_active   Boolean  @default(false)\n  enable_free_message   Boolean\n  subscription_price    Float\n  subscription_type     String\n  subscription_duration String\n  two_factor_auth       Boolean  @default(false)\n  instagram_url         String?\n  twitter_url           String?\n  facebook_url          String?\n  snapchat_url          String?\n  tiktok_url            String?\n  telegram_url          String?\n  youtube_url           String?\n  watermark_uid         String?\n  created_at            DateTime @default(now())\n  updated_at            DateTime @updatedAt\n  user                  User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel Notifications {\n  id              Int               @id @default(autoincrement())\n  notification_id String\n  user_id         Int\n  message         String\n  action          NotificationTypes\n  url             String\n  read            Boolean           @default(false)\n  created_at      DateTime          @default(now())\n  updated_at      DateTime          @updatedAt\n  user            User              @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel ReportUser {\n  id          Int      @id @default(autoincrement())\n  report_id   String\n  user_id     Int\n  reported_id String\n  report_type String\n  report      String\n  created_at  DateTime @default(now())\n  updated_at  DateTime @updatedAt\n  reportUser  User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel ReportPost {\n  id          Int      @id @default(autoincrement())\n  report_id   String\n  user_id     Int\n  post_id     Int\n  report_type String\n  report      String\n  created_at  DateTime @default(now())\n  updated_at  DateTime @updatedAt\n  post        Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([post_id])\n  @@index([user_id])\n}\n\nmodel ReportComment {\n  id          Int         @id @default(autoincrement())\n  report_id   String\n  user_id     Int\n  comment_id  Int\n  report_type String\n  report      String\n  created_at  DateTime    @default(now())\n  updated_at  DateTime    @updatedAt\n  comment     PostComment @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  user        User        @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([comment_id])\n  @@index([user_id])\n}\n\nmodel ReportLive {\n  id          Int        @id @default(autoincrement())\n  report_id   String\n  user_id     Int\n  live_id     Int\n  report_type String\n  report      String\n  created_at  DateTime   @default(now())\n  updated_at  DateTime   @updatedAt\n  comment     LiveStream @relation(fields: [live_id], references: [id], onDelete: Cascade)\n  user        User       @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([live_id])\n  @@index([user_id])\n}\n\nmodel ReportMessage {\n  id          Int      @id @default(autoincrement())\n  report_id   String\n  user_id     Int\n  message_id  Int\n  report_type String\n  report      String\n  created_at  DateTime @default(now())\n  updated_at  DateTime @updatedAt\n  message     Messages @relation(fields: [message_id], references: [id], onDelete: Cascade)\n  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([message_id])\n  @@index([user_id])\n}\n\nmodel UserPoints {\n  id                 Int                  @id @default(autoincrement())\n  user_id            Int                  @unique\n  points             Int\n  conversion_rate    Float\n  created_at         DateTime             @default(now())\n  updated_at         DateTime             @updatedAt\n  user               User                 @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  UserPointsPurchase UserPointsPurchase[]\n}\n\nmodel PointConversionRateUsers {\n  id                    Int                  @id @default(autoincrement())\n  user_id               Int\n  pointConversionRateId Int?\n  PointConversionRate   PointConversionRate? @relation(fields: [pointConversionRateId], references: [id])\n  user                  User                 @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel PointConversionRate {\n  id                       Int                        @id @default(autoincrement())\n  amount                   Int?\n  points                   Int?\n  pointConversionRateUsers PointConversionRateUsers[]\n}\n\nmodel UserWallet {\n  id              Int               @id @default(autoincrement())\n  user_id         Int               @unique\n  wallet_id       String\n  balance         Float\n  created_at      DateTime          @default(now())\n  updated_at      DateTime          @updatedAt\n  UserTransaction UserTransaction[]\n  user            User              @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel UserTransaction {\n  id                  Int             @id @default(autoincrement())\n  transaction_id      String\n  user_id             Int\n  wallet_id           Int\n  amount              Float\n  transaction_message String\n  transaction         String\n  transaction_type    TransactionType\n  currency            String?\n  exchange_rate       Float?\n  usd_equivalent      Float?\n  current_buy_value   Float           @default(0)\n  created_at          DateTime        @default(now())\n  updated_at          DateTime        @updatedAt\n  user                User            @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  UserWallet          UserWallet      @relation(fields: [wallet_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n  @@index([wallet_id])\n}\n\nmodel ModelSubscriptionPack {\n  id                    Int                     @id @default(autoincrement())\n  subscription_id       String\n  created_at            DateTime                @default(now())\n  updated_at            DateTime                @updatedAt\n  user_id               Int                     @unique\n  user                  User                    @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  ModelSubscriptionTier ModelSubscriptionTier[]\n}\n\nmodel ModelSubscriptionTier {\n  id                      Int                   @id @default(autoincrement())\n  subscription_id         Int\n  tier_name               String\n  tier_price              Float\n  tier_description        String\n  tier_duration           String\n  created_at              DateTime              @default(now())\n  updated_at              DateTime              @updatedAt\n  model_subscription_pack ModelSubscriptionPack @relation(fields: [subscription_id], references: [id], onDelete: Cascade)\n}\n\nmodel UserSubscriptionCurrent {\n  id              Int      @id @default(autoincrement())\n  subscription_id String\n  user_id         Int\n  model_id        Int\n  subscription    String\n  created_at      DateTime @default(now())\n  updated_at      DateTime @updatedAt\n  userId          Int?\n  ends_at         BigInt\n  model           User     @relation(\"ModelCurrentSubscriptions\", fields: [model_id], references: [id], onDelete: Cascade)\n  user            User     @relation(\"UserCurrentSubscription\", fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel UserSubscriptionHistory {\n  id              Int      @id @default(autoincrement())\n  subscription_id String\n  user_id         Int\n  model_id        Int\n  subscription    String\n  created_at      DateTime @default(now())\n  updated_at      DateTime @updatedAt\n  model           User     @relation(\"UserSubscriptionHistory\", fields: [model_id], references: [id], onDelete: Cascade)\n  user            User     @relation(\"UserSubscription\", fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel UserLocation {\n  id         Int      @id @default(autoincrement())\n  user_id    Int      @unique\n  latitude   Float    @default(0.0)\n  longitude  Float    @default(0.0)\n  city       String?\n  state      String?\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel GlobalPointsBuy {\n  id              Int      @id @default(autoincrement())\n  points_buy_id   String\n  points          Int\n  amount          Float\n  conversion_rate Float\n  currency        String\n  created_at      DateTime @default(now())\n  updated_at      DateTime @updatedAt\n}\n\nmodel UserWithdrawalBankAccount {\n  id              Int      @id @default(autoincrement())\n  user_id         Int\n  bank_account_id String\n  bank_name       String\n  account_name    String\n  account_number  String\n  bank_type       String   @default(\"nuban\")\n  routing_number  String\n  bank_country    String\n  created_at      DateTime @default(now())\n  updated_at      DateTime @updatedAt\n  user            User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel UserPointsPurchase {\n  id                Int         @id @default(autoincrement())\n  purchase_id       String      @unique\n  user_id           Int\n  points            Int         @default(0)\n  amount            Float\n  currency          String?\n  exchange_rate     Float?\n  usd_equivalent    Float?\n  current_buy_value Float       @default(0)\n  success           Boolean     @default(false)\n  created_at        DateTime    @default(now())\n  updated_at        DateTime    @updatedAt\n  userPointsId      Int?\n  UserPoints        UserPoints? @relation(fields: [userPointsId], references: [id])\n\n  @@index([userPointsId])\n}\n\nmodel UserAttachments {\n  id         Int      @id @default(autoincrement())\n  path       String\n  type       String\n  name       String\n  size       Int\n  extension  String\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  user_id    Int\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel UserBanks {\n  id                Int                 @id @default(autoincrement())\n  user_id           Int\n  bank_id           String\n  bank_name         String\n  account_name      String\n  account_number    String\n  bank_type         String              @default(\"nuban\")\n  routing_number    String?\n  swift_code        String?\n  bank_country      String\n  recipient_code    String?\n  created_at        DateTime            @default(now())\n  updated_at        DateTime            @updatedAt\n  user              User                @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  WithdrawalRequest WithdrawalRequest[]\n\n  @@index([user_id])\n}\n\nmodel ProductCategory {\n  id          Int       @id @default(autoincrement())\n  name        String\n  description String?\n  created_at  DateTime  @default(now())\n  product     Product[]\n}\n\nmodel ProductSize {\n  id                 Int                @id @default(autoincrement())\n  name               String\n  description        String?\n  created_at         DateTime           @default(now())\n  Cart               Cart[]\n  OrderItem          OrderItem[]\n  product_size_links ProductSizePivot[]\n}\n\nmodel Product {\n  id          Int                @id @default(autoincrement())\n  product_id  String             @unique\n  user_id     Int\n  name        String\n  description String?\n  price       Float\n  category_id Int\n  instock     Int\n  Cart        Cart[]\n  OrderItem   OrderItem[]\n  category    ProductCategory    @relation(fields: [category_id], references: [id], onDelete: Cascade)\n  images      ProductImages[]\n  sizes       ProductSizePivot[]\n  WishList    WishList[]\n}\n\nmodel ProductSizePivot {\n  id         Int         @id @default(autoincrement())\n  product_id Int\n  size_id    Int\n  created_at DateTime    @default(now())\n  updated_at DateTime    @updatedAt\n  product    Product     @relation(fields: [product_id], references: [id], onDelete: Cascade)\n  size       ProductSize @relation(fields: [size_id], references: [id], onDelete: Cascade)\n}\n\nmodel ProductImages {\n  id         Int      @id @default(autoincrement())\n  product_id Int\n  image_url  String\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)\n}\n\nmodel Cart {\n  id         Int         @id @default(autoincrement())\n  user_id    Int\n  product_id Int\n  quantity   Int\n  size_id    Int\n  created_at DateTime    @default(now())\n  updated_at DateTime    @updatedAt\n  product    Product     @relation(fields: [product_id], references: [id], onDelete: Cascade)\n  size       ProductSize @relation(fields: [size_id], references: [id])\n  user       User        @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel WishList {\n  id         Int      @id @default(autoincrement())\n  user_id    Int\n  product_id Int\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel Order {\n  id                Int           @id @default(autoincrement())\n  order_id          String        @unique\n  user_id           Int\n  total_amount      Float\n  created_at        DateTime      @default(now())\n  updated_at        DateTime      @updatedAt\n  payment_reference String?\n  payment_status    PaymentStatus @default(pending)\n  shipping_address  Json\n  status            OrderStatus   @default(pending)\n  user              User          @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  items             OrderItem[]\n\n  @@index([user_id])\n  @@index([status])\n  @@index([payment_reference])\n}\n\nmodel OrderItem {\n  id         Int          @id @default(autoincrement())\n  order_id   String\n  product_id String\n  quantity   Int\n  price      Float\n  size_id    Int?\n  created_at DateTime     @default(now())\n  updated_at DateTime     @updatedAt\n  order      Order        @relation(fields: [order_id], references: [order_id], onDelete: Cascade)\n  product    Product      @relation(fields: [product_id], references: [product_id], onDelete: Cascade)\n  size       ProductSize? @relation(fields: [size_id], references: [id])\n\n  @@index([order_id])\n  @@index([product_id])\n}\n\nmodel PendingCheckout {\n  id         Int      @id @default(autoincrement())\n  reference  String   @unique\n  user_id    Int\n  order_data Json\n  created_at DateTime @default(now())\n  expires_at DateTime\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([reference])\n  @@index([user_id])\n  @@index([expires_at])\n}\n\nmodel HelpCategory {\n  id           Int            @id @default(autoincrement())\n  name         String\n  description  String?\n  created_at   DateTime       @default(now())\n  HelpArticles HelpArticles[]\n}\n\nmodel HelpArticles {\n  id           Int          @id @default(autoincrement())\n  article_id   String       @unique\n  category_id  Int\n  title        String\n  content      String\n  created_at   DateTime     @default(now())\n  updated_at   DateTime     @updatedAt\n  HelpCategory HelpCategory @relation(fields: [category_id], references: [id], onDelete: Cascade)\n}\n\nmodel HelpContact {\n  id         Int      @id @default(autoincrement())\n  user_id    Int\n  subject    String\n  message    String\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel FAQ {\n  id         Int          @id @default(autoincrement())\n  question   String\n  created_at DateTime     @default(now())\n  FAQAnswers FAQAnswers[]\n}\n\nmodel FAQAnswers {\n  id         Int      @id @default(autoincrement())\n  faq_id     Int\n  answer     String\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  FAQ        FAQ      @relation(fields: [faq_id], references: [id], onDelete: Cascade)\n}\n\nmodel Tag {\n  id         Int          @id @default(autoincrement())\n  userId     Int\n  messageId  Int\n  created_at DateTime     @default(now())\n  message    GroupMessage @relation(fields: [messageId], references: [id])\n  user       User         @relation(fields: [userId], references: [id])\n}\n\nmodel Groups {\n  id          Int       @id @default(autoincrement())\n  adminId     Int\n  created_at  DateTime  @default(now())\n  description String?\n  groupIcon   String?\n  groupType   GroupType @default(PUBLIC)\n  isActive    Boolean   @default(true)\n\n  name                String\n  updated_at          DateTime                  @updatedAt\n  blockedParticipants BlockedGroupParticipant[]\n  members             GroupMember[]\n  messages            GroupMessage[]\n  settings            GroupSettings?\n  joinRequests        GroupJoinRequest[]\n  invitations         GroupInvitation[]\n  admin               User                      @relation(\"GroupAdmin\", fields: [adminId], references: [id])\n\n  @@index([adminId])\n  @@index([groupType])\n}\n\nmodel GroupMessage {\n  id               Int                @id @default(autoincrement())\n  content          String?\n  senderId         Int\n  created_at       DateTime           @default(now())\n  editedAt         DateTime?\n  groupId          Int\n  isEdited         Boolean            @default(false)\n  messageType      String             @default(\"text\")\n  replyToId        Int?\n  deliveryStatus   String             @default(\"sent\") // \"sent\", \"delivered\", \"read\"\n  updated_at       DateTime           @updatedAt\n  attachments      GroupAttachment[]\n  group            Groups             @relation(fields: [groupId], references: [id], onDelete: Cascade)\n  replyTo          GroupMessage?      @relation(\"MessageReplies\", fields: [replyToId], references: [id])\n  replies          GroupMessage[]     @relation(\"MessageReplies\")\n  sender           User               @relation(fields: [senderId], references: [id])\n  tags             Tag[]\n  GroupMessageRead GroupMessageRead[]\n}\n\nmodel GroupAttachment {\n  id         Int          @id @default(autoincrement())\n  url        String\n  type       String\n  messageId  Int\n  created_at DateTime     @default(now())\n  fileName   String?\n  fileSize   Int?\n  message    GroupMessage @relation(fields: [messageId], references: [id], onDelete: Cascade)\n}\n\nmodel GroupSettings {\n  id                  Int       @id @default(autoincrement())\n  allowFileSharing    Boolean   @default(true)\n  allowMediaSharing   Boolean   @default(true)\n  allowMemberInvites  Boolean   @default(true)\n  autoApproveJoinReqs Boolean   @default(true)\n  created_at          DateTime  @default(now())\n  groupId             Int       @unique\n  moderateMessages    Boolean   @default(false)\n  mutedUntil          DateTime?\n  updated_at          DateTime  @updatedAt\n  group               Groups    @relation(fields: [groupId], references: [id], onDelete: Cascade)\n}\n\nmodel BlockedGroupParticipant {\n  id         Int      @id @default(autoincrement())\n  blockedBy  Int\n  created_at DateTime @default(now())\n  groupId    Int\n  reason     String?\n  updated_at DateTime @updatedAt\n  userId     Int\n  blocker    User     @relation(\"BlockedByUser\", fields: [blockedBy], references: [id])\n  group      Groups   @relation(fields: [groupId], references: [id], onDelete: Cascade)\n  user       User     @relation(\"BlockedUser\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, groupId])\n  @@index([groupId])\n}\n\nmodel GroupMember {\n  id          Int             @id @default(autoincrement())\n  userId      Int\n  groupId     Int\n  role        GroupMemberRole @default(MEMBER)\n  joinedAt    DateTime        @default(now())\n  lastSeen    DateTime?\n  isMuted     Boolean         @default(false)\n  mutedBy     Int?\n  mutedUntil  DateTime?\n  isBlocked   Boolean         @default(false)\n  created_at  DateTime        @default(now())\n  updated_at  DateTime        @updatedAt\n  group       Groups          @relation(fields: [groupId], references: [id], onDelete: Cascade)\n  mutedByUser User?           @relation(\"MutedByUser\", fields: [mutedBy], references: [id])\n  user        User            @relation(\"GroupMembers\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, groupId])\n  @@index([groupId])\n  @@index([userId])\n}\n\nmodel ActivityLog {\n  id         Int      @id @default(autoincrement())\n  user_id    Int\n  action     String\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel LoginHistory {\n  id          Int      @id @default(autoincrement())\n  user_id     Int\n  ip_address  String\n  device      String\n  city        String\n  state       String\n  capital     String\n  country     String\n  countryCode String\n  continent   String\n  longitude   Int\n  latitude    Int\n  location    String\n  created_at  DateTime @default(now())\n  updated_at  DateTime @updatedAt\n  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel TwoFactorAuth {\n  id         Int      @id @default(autoincrement())\n  user_id    Int\n  code       Int\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel BatchProcessLogs {\n  id       Int    @id @default(autoincrement())\n  job_id   String\n  job_name String @default(\"Undefined Jobs\")\n  job_data String\n}\n\nmodel ResetPasswordRequests {\n  id         Int      @id @default(autoincrement())\n  user_id    Int\n  password   String\n  reset_code String\n  completed  Boolean  @default(false)\n  expires_at DateTime @db.Timestamp(6)\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel WithdrawalRequestCode {\n  id         Int      @id @default(autoincrement())\n  user_id    Int\n  code       Int\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel WithdrawalRequest {\n  id                Int                     @id @default(autoincrement())\n  user_id           Int\n  amount            Int\n  recipient_code    String\n  bank_account_id   Int\n  reason            String                  @default(\"Paymefans Model Withdrawal\")\n  status            WithdrawalRequestStatus\n  created_at        DateTime                @default(now())\n  updated_at        DateTime                @updatedAt\n  reference         String?\n  transfer_code     String?\n  paystack_response Json?\n  bank              UserBanks               @relation(fields: [bank_account_id], references: [id], onDelete: Cascade)\n  user              User                    @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel PlatformExchangeRate {\n  id         Int      @id @default(autoincrement())\n  name       String   @unique\n  buyValue   Float    @default(0)\n  sellValue  Float    @default(0)\n  rate       Float    @default(0)\n  symbol     String   @default(\"$\")\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n}\n\nmodel OuterPages {\n  id         Int      @id @default(autoincrement())\n  page_id    String   @unique\n  slug       String\n  title      String\n  content    String\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n}\n\nmodel SupportTickets {\n  id                   Int                    @id @default(autoincrement())\n  ticket_id            String                 @unique\n  user_id              Int\n  subject              String\n  message              String\n  status               String                 @default(\"open\")\n  created_at           DateTime               @default(now())\n  updated_at           DateTime               @updatedAt\n  SupportTicketReplies SupportTicketReplies[]\n  user                 User                   @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel SupportTicketReplies {\n  id         Int            @id @default(autoincrement())\n  ticket_id  String\n  user_id    Int\n  message    String\n  created_at DateTime       @default(now())\n  updated_at DateTime       @updatedAt\n  ticket     SupportTickets @relation(fields: [ticket_id], references: [ticket_id], onDelete: Cascade)\n  user       User           @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel Configurations {\n  id                            Int    @id @default(autoincrement())\n  app_name                      String @map(\"app_name\")\n  app_version                   String @map(\"app_version\")\n  app_url                       String @map(\"app_url\")\n  app_description               String @map(\"app_description\")\n  app_logo                      String @map(\"app_logo\")\n  default_currency              String @default(\"USD\") @map(\"default_currency\")\n  default_rate                  Float  @default(1.0) @map(\"default_rate\")\n  default_symbol                String @default(\"$\") @map(\"default_symbol\")\n  point_conversion_rate         Float  @default(1.0) @map(\"point_conversion_rate\")\n  point_conversion_rate_ngn     Float  @default(1.0) @map(\"point_conversion_rate_ngn\")\n  min_withdrawal_amount         Float  @default(0.0) @map(\"min_withdrawal_amount\")\n  min_withdrawal_amount_ngn     Float  @default(0.0) @map(\"min_withdrawal_amount_ngn\")\n  min_deposit_amount            Float  @default(0.0) @map(\"min_deposit_amount\")\n  min_deposit_amount_ngn        Float  @default(0.0) @map(\"min_deposit_amount_ngn\")\n  default_mode                  String @default(\"light\") @map(\"default_mode\")\n  primary_color                 String @default(\"#000000\") @map(\"primary_color\")\n  secondary_color               String @default(\"#FFFFFF\") @map(\"secondary_color\")\n  accent_color                  String @default(\"#0000FF\") @map(\"accent_color\")\n  home_feed_limit               Int    @default(20) @map(\"home_feed_limit\")\n  personal_profile_limit        Int    @default(10) @map(\"personal_profile_limit\")\n  personal_media_limit          Int    @default(10) @map(\"personal_media_limit\")\n  personal_repost_limit         Int    @default(10) @map(\"personal_repost_limit\")\n  post_page_comment_limit       Int    @default(20) @map(\"post_page_comment_limit\")\n  post_page_comment_reply_limit Int    @default(10) @map(\"post_page_comment_reply_limit\")\n  other_user_profile_limit      Int    @default(10) @map(\"other_user_profile_limit\")\n  other_user_media_limit        Int    @default(10) @map(\"other_user_media_limit\")\n  other_user_repost_limit       Int    @default(10) @map(\"other_user_repost_limit\")\n  notification_limit            Int    @default(20) @map(\"notification_limit\")\n  transaction_limit             Int    @default(20) @map(\"transaction_limit\")\n  model_search_limit            Int    @default(20) @map(\"model_search_limit\")\n\n  conversation_limit                    Int      @default(20) @map(\"conversation_limit\")\n  message_limit                         Int      @default(50) @map(\"message_limit\")\n  group_message_limit                   Int      @default(50) @map(\"group_message_limit\")\n  group_participant_limit               Int      @default(100) @map(\"group_participant_limit\")\n  group_limit                           Int      @default(20) @map(\"group_limit\")\n  hookup_enabled                        Boolean  @default(false) @map(\"hookup_enabled\")\n  hookup_page_limit                     Int      @default(20) @map(\"hookup_page_limit\")\n  status_limit                          Int      @default(20) @map(\"status_limit\")\n  subscription_limit                    Int      @default(20) @map(\"subscription_limit\")\n  subscribers_limit                     Int      @default(1000) @map(\"subscribers_limit\")\n  active_subscribers_limit              Int      @default(1000) @map(\"active_subscribers_limit\")\n  followers_limit                       Int      @default(1000) @map(\"followers_limit\")\n  upload_media_limit                    Int      @default(10) @map(\"upload_media_limit\")\n  model_upload_media_limit              Int      @default(10) @map(\"model_upload_media_limit\")\n  profile_updated_success_message       String   @default(\"Profile updated successfully\") @map(\"profile_updated_success_message\")\n  profile_updated_error_message         String   @default(\"Failed to update profile\") @map(\"profile_updated_error_message\")\n  profile_updating_message              String   @default(\"Updating profile...\") @map(\"profile_updating_message\")\n  profile_image_updated_success_message String   @default(\"Profile image updated successfully\") @map(\"profile_image_updated_success_message\")\n  profile_image_updated_error_message   String   @default(\"Failed to update profile image\") @map(\"profile_image_updated_error_message\")\n  profile_image_updating_message        String   @default(\"Updating profile image...\") @map(\"profile_image_updating_message\")\n  point_purchase_success_message        String   @default(\"Points purchased successfully\") @map(\"point_purchase_success_message\")\n  point_purchase_error_message          String   @default(\"Failed to purchase points\") @map(\"point_purchase_error_message\")\n  point_purchasing_message              String   @default(\"Purchasing points...\") @map(\"point_purchasing_message\")\n  point_purchase_minimum_message        String   @default(\"Minimum purchase amount not met\") @map(\"point_purchase_minimum_message\")\n  welcome_message_title                 String?  @map(\"welcome_message_title\")\n  welcome_message_content               String?  @map(\"welcome_message_content\")\n  welcome_message_enabled               Boolean  @default(true) @map(\"welcome_message_enabled\")\n  welcome_message_delay                 String   @default(\"300\") @map(\"welcome_message_delay\")\n  created_at                            DateTime @default(now()) @map(\"created_at\")\n  updated_at                            DateTime @updatedAt @map(\"updated_at\")\n  platform_deposit_fee                  Float    @default(0.10) @map(\"platform_deposit_fee\")\n  platform_withdrawal_fee               Float    @default(0.25) @map(\"platform_withdrawal_fee\")\n\n  @@index([app_name])\n}\n\nmodel PostGift {\n  id          Int      @id @default(autoincrement())\n  gifter_id   Int\n  receiver_id Int\n  post_id     Int\n  points      Float    @default(0)\n  created_at  DateTime @default(now()) @map(\"created_at\")\n  updated_at  DateTime @updatedAt @map(\"updated_at\")\n  gifter      User     @relation(\"Gifter\", fields: [gifter_id], references: [id], onDelete: Cascade)\n  post        Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  receiver    User     @relation(\"GiftReceiver\", fields: [receiver_id], references: [id], onDelete: Cascade)\n}\n\nmodel UserWithdrawalPin {\n  id         Int      @id @default(autoincrement())\n  user_id    Int\n  pin        String\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel UserBlock {\n  id         Int      @id @default(autoincrement())\n  block_id   String   @unique\n  blocker_id Int\n  blocked_id Int\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  blocked    User     @relation(\"UserBlocked\", fields: [blocked_id], references: [id], onDelete: Cascade)\n  blocker    User     @relation(\"UserBlocker\", fields: [blocker_id], references: [id], onDelete: Cascade)\n\n  @@unique([blocker_id, blocked_id])\n  @@index([blocker_id])\n  @@index([blocked_id])\n}\n\nmodel PurchasedPosts {\n  id          Int      @id @default(autoincrement())\n  user_id     Int\n  post_id     Int\n  purchase_id String   @unique\n  price       Float\n  created_at  DateTime @default(now())\n  updated_at  DateTime @updatedAt\n  post        Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel AutomatedMessage {\n  id           Int                  @id @default(autoincrement())\n  user_id      Int\n  message_type AutomatedMessageType\n  message_text String?\n  attachments  Json?                @default(\"[]\")\n  is_active    Boolean              @default(false)\n  created_at   DateTime             @default(now())\n  updated_at   DateTime             @updatedAt\n  user         User                 @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id, message_type])\n  @@index([user_id])\n}\n\nmodel GroupMessageRead {\n  id        Int          @id @default(autoincrement())\n  messageId Int\n  userId    String\n  readAt    DateTime     @default(now())\n  message   GroupMessage @relation(fields: [messageId], references: [id], onDelete: Cascade)\n  user      User         @relation(fields: [userId], references: [user_id], onDelete: Cascade)\n\n  @@unique([messageId, userId])\n  @@index([messageId])\n  @@index([userId])\n}\n\nmodel GroupJoinRequest {\n  id         Int               @id @default(autoincrement())\n  groupId    Int\n  userId     Int\n  message    String?\n  status     JoinRequestStatus @default(PENDING)\n  created_at DateTime          @default(now())\n  updated_at DateTime          @updatedAt\n  group      Groups            @relation(fields: [groupId], references: [id], onDelete: Cascade)\n  user       User              @relation(\"GroupJoinRequests\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([groupId, userId])\n  @@index([groupId])\n  @@index([userId])\n  @@index([status])\n}\n\nmodel GroupInvitation {\n  id         Int              @id @default(autoincrement())\n  groupId    Int\n  inviterId  Int\n  inviteeId  Int\n  message    String?\n  status     InvitationStatus @default(PENDING)\n  expiresAt  DateTime?\n  created_at DateTime         @default(now())\n  updated_at DateTime         @updatedAt\n  group      Groups           @relation(fields: [groupId], references: [id], onDelete: Cascade)\n  inviter    User             @relation(\"GroupInvitationsSent\", fields: [inviterId], references: [id], onDelete: Cascade)\n  invitee    User             @relation(\"GroupInvitationsReceived\", fields: [inviteeId], references: [id], onDelete: Cascade)\n\n  @@unique([groupId, inviteeId])\n  @@index([groupId])\n  @@index([inviterId])\n  @@index([inviteeId])\n  @@index([status])\n}\n\nmodel Referrals {\n  id          Int      @id @default(autoincrement())\n  user_id     Int\n  referral_id Int\n  code        String\n  created_at  DateTime @default(now())\n  updated_at  DateTime @updatedAt\n  user        User     @relation(\"Referrer\", fields: [user_id], references: [id], onDelete: Cascade)\n  referral    User     @relation(\"UserReferrals\", fields: [referral_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel ReferralEarnings {\n  id          Int      @id @default(autoincrement())\n  user_id     Int\n  points      Float\n  description String\n  created_at  DateTime @default(now())\n  updated_at  DateTime @updatedAt\n  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nenum WithdrawalRequestStatus {\n  pending\n  processing\n  rejected\n  completed\n  approved\n}\n\nenum OrderStatus {\n  pending\n  processing\n  shipped\n  delivered\n  cancelled\n}\n\nenum PaymentStatus {\n  pending\n  paid\n  failed\n}\n\nenum UserRole {\n  fan\n  model\n  admin\n  support\n}\n\nenum PostAudience {\n  public\n  private\n  price\n  followers\n  subscribers\n}\n\nenum PostStatus {\n  pending\n  approved\n  rejected\n}\n\nenum TransactionType {\n  credit\n  debit\n  pending\n  referral\n}\n\nenum NotificationTypes {\n  follow\n  like\n  purchase\n  comment\n  repost\n  message\n  live\n  sparkle\n}\n\nenum VerificationStateEnum {\n  not_started\n  started\n  pending\n  approved\n  rejected\n}\n\nenum MediaState {\n  processing\n  completed\n  failed\n}\n\nenum GroupType {\n  PUBLIC\n  PRIVATE\n  SECRET\n}\n\nenum GroupMemberRole {\n  ADMIN\n  MODERATOR\n  MEMBER\n}\n\nenum AutomatedMessageType {\n  followers\n  subscribers\n}\n\nenum JoinRequestStatus {\n  PENDING\n  APPROVED\n  REJECTED\n}\n\nenum InvitationStatus {\n  PENDING\n  ACCEPTED\n  DECLINED\n  EXPIRED\n}\n\nmodel ConversationFreeMessage {\n  id              Int      @id @default(autoincrement())\n  conversation_id String\n  user_id         Int\n  enabled         Boolean  @default(false)\n  created_at      DateTime @default(now())\n  updated_at      DateTime @updatedAt\n\n  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([conversation_id, user_id])\n  @@index([conversation_id])\n  @@index([user_id])\n}\n",
  "inlineSchemaHash": "bee67b6a14eb2808f96f43542808049c6926841773523e282e0dd2ece9c4d9fe",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_email_verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_model\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"email_verify_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email_verify_time\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"is_phone_verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile_image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile_banner\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"post_watermark\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total_followers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"total_following\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"total_subscribers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"active_status\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"max_post_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hasPin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"show_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"watermarkEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"delete_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"should_delete\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"flags\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ActivityLog\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"ActivityLogToUser\"},{\"name\":\"AutomatedMessage\",\"kind\":\"object\",\"type\":\"AutomatedMessage\",\"relationName\":\"AutomatedMessageToUser\"},{\"name\":\"blockedUsers\",\"kind\":\"object\",\"type\":\"BlockedGroupParticipant\",\"relationName\":\"BlockedByUser\"},{\"name\":\"blockedFromGroups\",\"kind\":\"object\",\"type\":\"BlockedGroupParticipant\",\"relationName\":\"BlockedUser\"},{\"name\":\"Cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToUser\"},{\"name\":\"CommentImpression\",\"kind\":\"object\",\"type\":\"CommentImpression\",\"relationName\":\"CommentImpressionToUser\"},{\"name\":\"CommentViews\",\"kind\":\"object\",\"type\":\"CommentView\",\"relationName\":\"CommentViews\"},{\"name\":\"Followers\",\"kind\":\"object\",\"type\":\"Follow\",\"relationName\":\"Followers\"},{\"name\":\"Follow\",\"kind\":\"object\",\"type\":\"Follow\",\"relationName\":\"FollowToUser\"},{\"name\":\"mutedUsers\",\"kind\":\"object\",\"type\":\"GroupMember\",\"relationName\":\"MutedByUser\"},{\"name\":\"groupMemberships\",\"kind\":\"object\",\"type\":\"GroupMember\",\"relationName\":\"GroupMembers\"},{\"name\":\"GroupMessage\",\"kind\":\"object\",\"type\":\"GroupMessage\",\"relationName\":\"GroupMessageToUser\"},{\"name\":\"adminGroups\",\"kind\":\"object\",\"type\":\"Groups\",\"relationName\":\"GroupAdmin\"},{\"name\":\"HelpContact\",\"kind\":\"object\",\"type\":\"HelpContact\",\"relationName\":\"HelpContactToUser\"},{\"name\":\"LiveStream\",\"kind\":\"object\",\"type\":\"LiveStream\",\"relationName\":\"LiveStreamToUser\"},{\"name\":\"LiveStreamComment\",\"kind\":\"object\",\"type\":\"LiveStreamComment\",\"relationName\":\"LiveStreamCommentToUser\"},{\"name\":\"LiveStreamLike\",\"kind\":\"object\",\"type\":\"LiveStreamLike\",\"relationName\":\"LiveStreamLikeToUser\"},{\"name\":\"LiveStreamView\",\"kind\":\"object\",\"type\":\"LiveStreamView\",\"relationName\":\"LiveStreamViewToUser\"},{\"name\":\"LoginHistory\",\"kind\":\"object\",\"type\":\"LoginHistory\",\"relationName\":\"LoginHistoryToUser\"},{\"name\":\"receivedMessages\",\"kind\":\"object\",\"type\":\"Messages\",\"relationName\":\"MessageReceiver\"},{\"name\":\"sentMessages\",\"kind\":\"object\",\"type\":\"Messages\",\"relationName\":\"MessageSender\"},{\"name\":\"Model\",\"kind\":\"object\",\"type\":\"Model\",\"relationName\":\"ModelToUser\"},{\"name\":\"ModelSubscriptionPack\",\"kind\":\"object\",\"type\":\"ModelSubscriptionPack\",\"relationName\":\"ModelSubscriptionPackToUser\"},{\"name\":\"Notifications\",\"kind\":\"object\",\"type\":\"Notifications\",\"relationName\":\"NotificationsToUser\"},{\"name\":\"Order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"PendingCheckout\",\"kind\":\"object\",\"type\":\"PendingCheckout\",\"relationName\":\"PendingCheckoutToUser\"},{\"name\":\"PointConversionRateUsers\",\"kind\":\"object\",\"type\":\"PointConversionRateUsers\",\"relationName\":\"PointConversionRateUsersToUser\"},{\"name\":\"Post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToUser\"},{\"name\":\"PostComment\",\"kind\":\"object\",\"type\":\"PostComment\",\"relationName\":\"PostCommentToUser\"},{\"name\":\"PostCommentLikes\",\"kind\":\"object\",\"type\":\"PostCommentLikes\",\"relationName\":\"PostCommentLikesToUser\"},{\"name\":\"Gifter\",\"kind\":\"object\",\"type\":\"PostGift\",\"relationName\":\"Gifter\"},{\"name\":\"GiftReciver\",\"kind\":\"object\",\"type\":\"PostGift\",\"relationName\":\"GiftReceiver\"},{\"name\":\"PostImpression\",\"kind\":\"object\",\"type\":\"PostImpression\",\"relationName\":\"PostImpressionToUser\"},{\"name\":\"PostLike\",\"kind\":\"object\",\"type\":\"PostLike\",\"relationName\":\"PostLikeToUser\"},{\"name\":\"PostShared\",\"kind\":\"object\",\"type\":\"PostShared\",\"relationName\":\"PostSharedToUser\"},{\"name\":\"ProfileViewsReceived\",\"kind\":\"object\",\"type\":\"ProfileView\",\"relationName\":\"ProfileViewed\"},{\"name\":\"ProfileViewsGiven\",\"kind\":\"object\",\"type\":\"ProfileView\",\"relationName\":\"ProfileViewer\"},{\"name\":\"PurchasedPosts\",\"kind\":\"object\",\"type\":\"PurchasedPosts\",\"relationName\":\"PurchasedPostsToUser\"},{\"name\":\"ReportComment\",\"kind\":\"object\",\"type\":\"ReportComment\",\"relationName\":\"ReportCommentToUser\"},{\"name\":\"ReportLive\",\"kind\":\"object\",\"type\":\"ReportLive\",\"relationName\":\"ReportLiveToUser\"},{\"name\":\"ReportMessage\",\"kind\":\"object\",\"type\":\"ReportMessage\",\"relationName\":\"ReportMessageToUser\"},{\"name\":\"ReportPost\",\"kind\":\"object\",\"type\":\"ReportPost\",\"relationName\":\"ReportPostToUser\"},{\"name\":\"ReportUser\",\"kind\":\"object\",\"type\":\"ReportUser\",\"relationName\":\"ReportUserToUser\"},{\"name\":\"ResetPasswordRequests\",\"kind\":\"object\",\"type\":\"ResetPasswordRequests\",\"relationName\":\"ResetPasswordRequestsToUser\"},{\"name\":\"Settings\",\"kind\":\"object\",\"type\":\"Settings\",\"relationName\":\"SettingsToUser\"},{\"name\":\"StoryViews\",\"kind\":\"object\",\"type\":\"StoryView\",\"relationName\":\"StoryViews\"},{\"name\":\"UserSubscribers\",\"kind\":\"object\",\"type\":\"Subscribers\",\"relationName\":\"Subscribers\"},{\"name\":\"Subscribers\",\"kind\":\"object\",\"type\":\"Subscribers\",\"relationName\":\"SubscribersToUser\"},{\"name\":\"SupportTicketReplies\",\"kind\":\"object\",\"type\":\"SupportTicketReplies\",\"relationName\":\"SupportTicketRepliesToUser\"},{\"name\":\"SupportTickets\",\"kind\":\"object\",\"type\":\"SupportTickets\",\"relationName\":\"SupportTicketsToUser\"},{\"name\":\"Tag\",\"kind\":\"object\",\"type\":\"Tag\",\"relationName\":\"TagToUser\"},{\"name\":\"TwoFactorAuth\",\"kind\":\"object\",\"type\":\"TwoFactorAuth\",\"relationName\":\"TwoFactorAuthToUser\"},{\"name\":\"UserAttachments\",\"kind\":\"object\",\"type\":\"UserAttachments\",\"relationName\":\"UserToUserAttachments\"},{\"name\":\"UserBanks\",\"kind\":\"object\",\"type\":\"UserBanks\",\"relationName\":\"UserToUserBanks\"},{\"name\":\"BlockedUsersList\",\"kind\":\"object\",\"type\":\"UserBlock\",\"relationName\":\"UserBlocked\"},{\"name\":\"BlockedByUsers\",\"kind\":\"object\",\"type\":\"UserBlock\",\"relationName\":\"UserBlocker\"},{\"name\":\"UserLocation\",\"kind\":\"object\",\"type\":\"UserLocation\",\"relationName\":\"UserToUserLocation\"},{\"name\":\"UserMedia\",\"kind\":\"object\",\"type\":\"UserMedia\",\"relationName\":\"UserToUserMedia\"},{\"name\":\"UserPoints\",\"kind\":\"object\",\"type\":\"UserPoints\",\"relationName\":\"UserToUserPoints\"},{\"name\":\"UserRepost\",\"kind\":\"object\",\"type\":\"UserRepost\",\"relationName\":\"UserToUserRepost\"},{\"name\":\"UserStory\",\"kind\":\"object\",\"type\":\"UserStory\",\"relationName\":\"UserToUserStory\"},{\"name\":\"ModelSubscriptionCurrent\",\"kind\":\"object\",\"type\":\"UserSubscriptionCurrent\",\"relationName\":\"ModelCurrentSubscriptions\"},{\"name\":\"UserSubscriptionCurrent\",\"kind\":\"object\",\"type\":\"UserSubscriptionCurrent\",\"relationName\":\"UserCurrentSubscription\"},{\"name\":\"UserSubscriptionHistory\",\"kind\":\"object\",\"type\":\"UserSubscriptionHistory\",\"relationName\":\"UserSubscriptionHistory\"},{\"name\":\"UserSubscription\",\"kind\":\"object\",\"type\":\"UserSubscriptionHistory\",\"relationName\":\"UserSubscription\"},{\"name\":\"UserTransaction\",\"kind\":\"object\",\"type\":\"UserTransaction\",\"relationName\":\"UserToUserTransaction\"},{\"name\":\"UserWallet\",\"kind\":\"object\",\"type\":\"UserWallet\",\"relationName\":\"UserToUserWallet\"},{\"name\":\"UserWithdrawalBankAccount\",\"kind\":\"object\",\"type\":\"UserWithdrawalBankAccount\",\"relationName\":\"UserToUserWithdrawalBankAccount\"},{\"name\":\"UserWithdrawalPin\",\"kind\":\"object\",\"type\":\"UserWithdrawalPin\",\"relationName\":\"UserToUserWithdrawalPin\"},{\"name\":\"WishList\",\"kind\":\"object\",\"type\":\"WishList\",\"relationName\":\"UserToWishList\"},{\"name\":\"WithdrawalRequest\",\"kind\":\"object\",\"type\":\"WithdrawalRequest\",\"relationName\":\"UserToWithdrawalRequest\"},{\"name\":\"WithWithdrawalRequestCode\",\"kind\":\"object\",\"type\":\"WithdrawalRequestCode\",\"relationName\":\"UserToWithdrawalRequestCode\"},{\"name\":\"GroupMessageRead\",\"kind\":\"object\",\"type\":\"GroupMessageRead\",\"relationName\":\"GroupMessageReadToUser\"},{\"name\":\"GroupJoinRequests\",\"kind\":\"object\",\"type\":\"GroupJoinRequest\",\"relationName\":\"GroupJoinRequests\"},{\"name\":\"GroupInvitationsSent\",\"kind\":\"object\",\"type\":\"GroupInvitation\",\"relationName\":\"GroupInvitationsSent\"},{\"name\":\"GroupInvitationsReceived\",\"kind\":\"object\",\"type\":\"GroupInvitation\",\"relationName\":\"GroupInvitationsReceived\"},{\"name\":\"OldUsernames\",\"kind\":\"object\",\"type\":\"OldUsername\",\"relationName\":\"OldUsernameToUser\"},{\"name\":\"ConversationFreeMessages\",\"kind\":\"object\",\"type\":\"ConversationFreeMessage\",\"relationName\":\"ConversationFreeMessageToUser\"},{\"name\":\"ReferralEarnings\",\"kind\":\"object\",\"type\":\"ReferralEarnings\",\"relationName\":\"ReferralEarningsToUser\"},{\"name\":\"Referrals\",\"kind\":\"object\",\"type\":\"Referrals\",\"relationName\":\"UserReferrals\"},{\"name\":\"Referrer\",\"kind\":\"object\",\"type\":\"Referrals\",\"relationName\":\"Referrer\"},{\"name\":\"UploadedMedia\",\"kind\":\"object\",\"type\":\"UploadedMedia\",\"relationName\":\"UploadedMediaToUser\"}],\"dbName\":null},\"Participants\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Conversations\",\"kind\":\"object\",\"type\":\"Conversations\",\"relationName\":\"ConversationsToParticipants\"}],\"dbName\":null},\"Conversations\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversation_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Messages\",\"relationName\":\"ConversationsToMessages\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"Participants\",\"relationName\":\"ConversationsToParticipants\"}],\"dbName\":null},\"Messages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sender_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receiver_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attachment\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isSystemMessage\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversationsId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"groupsId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"story_reply\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"Conversations\",\"kind\":\"object\",\"type\":\"Conversations\",\"relationName\":\"ConversationsToMessages\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageReceiver\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageSender\"},{\"name\":\"ReportMessage\",\"kind\":\"object\",\"type\":\"ReportMessage\",\"relationName\":\"MessagesToReportMessage\"}],\"dbName\":null},\"OldUsername\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"old_username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OldUsernameToUser\"}],\"dbName\":null},\"Model\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dob\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hookup\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"payment_status\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"payment_reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verification_video\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verification_image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verification_status\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"verification_state\",\"kind\":\"enum\",\"type\":\"VerificationStateEnum\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"watermark\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ModelToUser\"}],\"dbName\":null},\"UploadedMedia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"media_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"extension\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"media_state\",\"kind\":\"enum\",\"type\":\"MediaState\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UploadedMediaToUser\"}],\"dbName\":null},\"UserMedia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"media_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"media_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"media_state\",\"kind\":\"enum\",\"type\":\"MediaState\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blur\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"poster\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"accessible_to\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToUserMedia\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserMedia\"}],\"dbName\":null},\"UserRepost\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"repost_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToUserRepost\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserRepost\"}],\"dbName\":null},\"UserStory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"story_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"StoryMedia\",\"kind\":\"object\",\"type\":\"StoryMedia\",\"relationName\":\"StoryMediaToUserStory\"},{\"name\":\"StoryView\",\"kind\":\"object\",\"type\":\"StoryView\",\"relationName\":\"StoryViewToUserStory\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserStory\"}],\"dbName\":null},\"StoryMedia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"media_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"media_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"story_content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"media_state\",\"kind\":\"enum\",\"type\":\"MediaState\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"captionElements\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"media_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"UserStory\",\"relationName\":\"StoryMediaToUserStory\"},{\"name\":\"StoryView\",\"kind\":\"object\",\"type\":\"StoryView\",\"relationName\":\"StoryMediaToStoryView\"}],\"dbName\":null},\"StoryView\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"story_media_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"viewer_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"viewed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userStoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"story_media\",\"kind\":\"object\",\"type\":\"StoryMedia\",\"relationName\":\"StoryMediaToStoryView\"},{\"name\":\"UserStory\",\"kind\":\"object\",\"type\":\"UserStory\",\"relationName\":\"StoryViewToUserStory\"},{\"name\":\"viewer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StoryViews\"}],\"dbName\":null},\"Post\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"was_repost\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"repost_username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"repost_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"media\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"post_price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"post_status\",\"kind\":\"enum\",\"type\":\"PostStatus\"},{\"name\":\"post_audience\",\"kind\":\"enum\",\"type\":\"PostAudience\"},{\"name\":\"post_is_visible\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"post_likes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_comments\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_reposts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_impressions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"watermark_enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostToUser\"},{\"name\":\"PostComment\",\"kind\":\"object\",\"type\":\"PostComment\",\"relationName\":\"PostToPostComment\"},{\"name\":\"PostGift\",\"kind\":\"object\",\"type\":\"PostGift\",\"relationName\":\"PostToPostGift\"},{\"name\":\"PostImpression\",\"kind\":\"object\",\"type\":\"PostImpression\",\"relationName\":\"PostToPostImpression\"},{\"name\":\"PostLike\",\"kind\":\"object\",\"type\":\"PostLike\",\"relationName\":\"PostToPostLike\"},{\"name\":\"PostShared\",\"kind\":\"object\",\"type\":\"PostShared\",\"relationName\":\"PostToPostShared\"},{\"name\":\"PurchasedPosts\",\"kind\":\"object\",\"type\":\"PurchasedPosts\",\"relationName\":\"PostToPurchasedPosts\"},{\"name\":\"ReportPost\",\"kind\":\"object\",\"type\":\"ReportPost\",\"relationName\":\"PostToReportPost\"},{\"name\":\"UserMedia\",\"kind\":\"object\",\"type\":\"UserMedia\",\"relationName\":\"PostToUserMedia\"},{\"name\":\"UserRepost\",\"kind\":\"object\",\"type\":\"UserRepost\",\"relationName\":\"PostToUserRepost\"}],\"dbName\":null},\"PostImpression\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPostImpression\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostImpressionToUser\"}],\"dbName\":null},\"ProfileView\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profile_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"viewer_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ip_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProfileViewed\"},{\"name\":\"viewer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProfileViewer\"}],\"dbName\":null},\"CommentView\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ip_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"PostComment\",\"relationName\":\"CommentViewToPostComment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentViews\"}],\"dbName\":null},\"PostComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment_impressions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"CommentImpression\",\"kind\":\"object\",\"type\":\"CommentImpression\",\"relationName\":\"CommentImpressionToPostComment\"},{\"name\":\"CommentView\",\"kind\":\"object\",\"type\":\"CommentView\",\"relationName\":\"CommentViewToPostComment\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPostComment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostCommentToUser\"},{\"name\":\"PostCommentAttachments\",\"kind\":\"object\",\"type\":\"PostCommentAttachments\",\"relationName\":\"PostCommentToPostCommentAttachments\"},{\"name\":\"PostCommentLikes\",\"kind\":\"object\",\"type\":\"PostCommentLikes\",\"relationName\":\"PostCommentToPostCommentLikes\"},{\"name\":\"ReportComment\",\"kind\":\"object\",\"type\":\"ReportComment\",\"relationName\":\"PostCommentToReportComment\"}],\"dbName\":null},\"CommentImpression\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"PostComment\",\"relationName\":\"CommentImpressionToPostComment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentImpressionToUser\"}],\"dbName\":null},\"PostCommentAttachments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Comment\",\"kind\":\"object\",\"type\":\"PostComment\",\"relationName\":\"PostCommentToPostCommentAttachments\"}],\"dbName\":null},\"PostCommentLikes\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"like_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"PostComment\",\"relationName\":\"PostCommentToPostCommentLikes\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostCommentLikesToUser\"}],\"dbName\":null},\"PostLike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"like_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPostLike\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostLikeToUser\"}],\"dbName\":null},\"PostShared\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shared_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPostShared\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostSharedToUser\"}],\"dbName\":null},\"Follow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"follow_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"follower_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"followers\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Followers\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FollowToUser\"}],\"dbName\":null},\"Subscribers\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sub_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscriber_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriber\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Subscribers\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SubscribersToUser\"}],\"dbName\":null},\"LiveStream\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stream_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stream_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_stream_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stream_call_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stream_status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LiveStreamToUser\"},{\"name\":\"LiveStreamComment\",\"kind\":\"object\",\"type\":\"LiveStreamComment\",\"relationName\":\"LiveStreamToLiveStreamComment\"},{\"name\":\"LiveStreamLike\",\"kind\":\"object\",\"type\":\"LiveStreamLike\",\"relationName\":\"LiveStreamToLiveStreamLike\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"LiveStreamParticipants\",\"relationName\":\"LiveStreamToLiveStreamParticipants\"},{\"name\":\"LiveStreamView\",\"kind\":\"object\",\"type\":\"LiveStreamView\",\"relationName\":\"LiveStreamToLiveStreamView\"},{\"name\":\"ReportLive\",\"kind\":\"object\",\"type\":\"ReportLive\",\"relationName\":\"LiveStreamToReportLive\"}],\"dbName\":null},\"LiveStreamParticipants\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stream_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"host_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"participant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"liveStreamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"LiveStream\",\"kind\":\"object\",\"type\":\"LiveStream\",\"relationName\":\"LiveStreamToLiveStreamParticipants\"}],\"dbName\":null},\"LiveStreamComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"live_comment_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"live_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"live\",\"kind\":\"object\",\"type\":\"LiveStream\",\"relationName\":\"LiveStreamToLiveStreamComment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LiveStreamCommentToUser\"}],\"dbName\":null},\"LiveStreamLike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"live_like_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"live_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"live\",\"kind\":\"object\",\"type\":\"LiveStream\",\"relationName\":\"LiveStreamToLiveStreamLike\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LiveStreamLikeToUser\"}],\"dbName\":null},\"LiveStreamView\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"live_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"live\",\"kind\":\"object\",\"type\":\"LiveStream\",\"relationName\":\"LiveStreamToLiveStreamView\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LiveStreamViewToUser\"}],\"dbName\":null},\"Settings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price_per_message\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"subscription_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enable_free_message\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"subscription_price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"subscription_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription_duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"two_factor_auth\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"instagram_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twitter_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facebook_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"snapchat_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tiktok_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telegram_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"youtube_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"watermark_uid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SettingsToUser\"}],\"dbName\":null},\"Notifications\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notification_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"enum\",\"type\":\"NotificationTypes\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationsToUser\"}],\"dbName\":null},\"ReportUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"report_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reported_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"report_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"report\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reportUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReportUserToUser\"}],\"dbName\":null},\"ReportPost\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"report_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"report_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"report\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToReportPost\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReportPostToUser\"}],\"dbName\":null},\"ReportComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"report_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"report_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"report\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"PostComment\",\"relationName\":\"PostCommentToReportComment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReportCommentToUser\"}],\"dbName\":null},\"ReportLive\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"report_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"live_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"report_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"report\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"LiveStream\",\"relationName\":\"LiveStreamToReportLive\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReportLiveToUser\"}],\"dbName\":null},\"ReportMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"report_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"report_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"report\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"Messages\",\"relationName\":\"MessagesToReportMessage\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReportMessageToUser\"}],\"dbName\":null},\"UserPoints\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversion_rate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserPoints\"},{\"name\":\"UserPointsPurchase\",\"kind\":\"object\",\"type\":\"UserPointsPurchase\",\"relationName\":\"UserPointsToUserPointsPurchase\"}],\"dbName\":null},\"PointConversionRateUsers\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pointConversionRateId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"PointConversionRate\",\"kind\":\"object\",\"type\":\"PointConversionRate\",\"relationName\":\"PointConversionRateToPointConversionRateUsers\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PointConversionRateUsersToUser\"}],\"dbName\":null},\"PointConversionRate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pointConversionRateUsers\",\"kind\":\"object\",\"type\":\"PointConversionRateUsers\",\"relationName\":\"PointConversionRateToPointConversionRateUsers\"}],\"dbName\":null},\"UserWallet\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"wallet_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UserTransaction\",\"kind\":\"object\",\"type\":\"UserTransaction\",\"relationName\":\"UserTransactionToUserWallet\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserWallet\"}],\"dbName\":null},\"UserTransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"transaction_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"wallet_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"transaction_message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transaction\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transaction_type\",\"kind\":\"enum\",\"type\":\"TransactionType\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exchange_rate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"usd_equivalent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"current_buy_value\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserTransaction\"},{\"name\":\"UserWallet\",\"kind\":\"object\",\"type\":\"UserWallet\",\"relationName\":\"UserTransactionToUserWallet\"}],\"dbName\":null},\"ModelSubscriptionPack\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscription_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ModelSubscriptionPackToUser\"},{\"name\":\"ModelSubscriptionTier\",\"kind\":\"object\",\"type\":\"ModelSubscriptionTier\",\"relationName\":\"ModelSubscriptionPackToModelSubscriptionTier\"}],\"dbName\":null},\"ModelSubscriptionTier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscription_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tier_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tier_price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"tier_description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tier_duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"model_subscription_pack\",\"kind\":\"object\",\"type\":\"ModelSubscriptionPack\",\"relationName\":\"ModelSubscriptionPackToModelSubscriptionTier\"}],\"dbName\":null},\"UserSubscriptionCurrent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscription_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"model_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ends_at\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"model\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ModelCurrentSubscriptions\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserCurrentSubscription\"}],\"dbName\":null},\"UserSubscriptionHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscription_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"model_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"model\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserSubscriptionHistory\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserSubscription\"}],\"dbName\":null},\"UserLocation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserLocation\"}],\"dbName\":null},\"GlobalPointsBuy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"points_buy_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"conversion_rate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"UserWithdrawalBankAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bank_account_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bank_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bank_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"routing_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bank_country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserWithdrawalBankAccount\"}],\"dbName\":null},\"UserPointsPurchase\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"purchase_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exchange_rate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"usd_equivalent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"current_buy_value\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"success\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userPointsId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"UserPoints\",\"kind\":\"object\",\"type\":\"UserPoints\",\"relationName\":\"UserPointsToUserPointsPurchase\"}],\"dbName\":null},\"UserAttachments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"extension\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserAttachments\"}],\"dbName\":null},\"UserBanks\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bank_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bank_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bank_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"routing_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"swift_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bank_country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipient_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserBanks\"},{\"name\":\"WithdrawalRequest\",\"kind\":\"object\",\"type\":\"WithdrawalRequest\",\"relationName\":\"UserBanksToWithdrawalRequest\"}],\"dbName\":null},\"ProductCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductCategory\"}],\"dbName\":null},\"ProductSize\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToProductSize\"},{\"name\":\"OrderItem\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProductSize\"},{\"name\":\"product_size_links\",\"kind\":\"object\",\"type\":\"ProductSizePivot\",\"relationName\":\"ProductSizeToProductSizePivot\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"instock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToProduct\"},{\"name\":\"OrderItem\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"ProductCategory\",\"relationName\":\"ProductToProductCategory\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"ProductImages\",\"relationName\":\"ProductToProductImages\"},{\"name\":\"sizes\",\"kind\":\"object\",\"type\":\"ProductSizePivot\",\"relationName\":\"ProductToProductSizePivot\"},{\"name\":\"WishList\",\"kind\":\"object\",\"type\":\"WishList\",\"relationName\":\"ProductToWishList\"}],\"dbName\":null},\"ProductSizePivot\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"size_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductSizePivot\"},{\"name\":\"size\",\"kind\":\"object\",\"type\":\"ProductSize\",\"relationName\":\"ProductSizeToProductSizePivot\"}],\"dbName\":null},\"ProductImages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"image_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductImages\"}],\"dbName\":null},\"Cart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"size_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CartToProduct\"},{\"name\":\"size\",\"kind\":\"object\",\"type\":\"ProductSize\",\"relationName\":\"CartToProductSize\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CartToUser\"}],\"dbName\":null},\"WishList\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToWishList\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWishList\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"total_amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"payment_reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment_status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"shipping_address\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"}],\"dbName\":null},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"size_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"size\",\"kind\":\"object\",\"type\":\"ProductSize\",\"relationName\":\"OrderItemToProductSize\"}],\"dbName\":null},\"PendingCheckout\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PendingCheckoutToUser\"}],\"dbName\":null},\"HelpCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"HelpArticles\",\"kind\":\"object\",\"type\":\"HelpArticles\",\"relationName\":\"HelpArticlesToHelpCategory\"}],\"dbName\":null},\"HelpArticles\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"article_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"HelpCategory\",\"kind\":\"object\",\"type\":\"HelpCategory\",\"relationName\":\"HelpArticlesToHelpCategory\"}],\"dbName\":null},\"HelpContact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"HelpContactToUser\"}],\"dbName\":null},\"FAQ\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"question\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"FAQAnswers\",\"kind\":\"object\",\"type\":\"FAQAnswers\",\"relationName\":\"FAQToFAQAnswers\"}],\"dbName\":null},\"FAQAnswers\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"faq_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"answer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"FAQ\",\"kind\":\"object\",\"type\":\"FAQ\",\"relationName\":\"FAQToFAQAnswers\"}],\"dbName\":null},\"Tag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"GroupMessage\",\"relationName\":\"GroupMessageToTag\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TagToUser\"}],\"dbName\":null},\"Groups\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"groupIcon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"groupType\",\"kind\":\"enum\",\"type\":\"GroupType\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"blockedParticipants\",\"kind\":\"object\",\"type\":\"BlockedGroupParticipant\",\"relationName\":\"BlockedGroupParticipantToGroups\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"GroupMember\",\"relationName\":\"GroupMemberToGroups\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"GroupMessage\",\"relationName\":\"GroupMessageToGroups\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"GroupSettings\",\"relationName\":\"GroupSettingsToGroups\"},{\"name\":\"joinRequests\",\"kind\":\"object\",\"type\":\"GroupJoinRequest\",\"relationName\":\"GroupJoinRequestToGroups\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"GroupInvitation\",\"relationName\":\"GroupInvitationToGroups\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GroupAdmin\"}],\"dbName\":null},\"GroupMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"editedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isEdited\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"messageType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"replyToId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deliveryStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"GroupAttachment\",\"relationName\":\"GroupAttachmentToGroupMessage\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"Groups\",\"relationName\":\"GroupMessageToGroups\"},{\"name\":\"replyTo\",\"kind\":\"object\",\"type\":\"GroupMessage\",\"relationName\":\"MessageReplies\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"GroupMessage\",\"relationName\":\"MessageReplies\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GroupMessageToUser\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"Tag\",\"relationName\":\"GroupMessageToTag\"},{\"name\":\"GroupMessageRead\",\"kind\":\"object\",\"type\":\"GroupMessageRead\",\"relationName\":\"GroupMessageToGroupMessageRead\"}],\"dbName\":null},\"GroupAttachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"GroupMessage\",\"relationName\":\"GroupAttachmentToGroupMessage\"}],\"dbName\":null},\"GroupSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"allowFileSharing\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"allowMediaSharing\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"allowMemberInvites\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"autoApproveJoinReqs\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"moderateMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"mutedUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"Groups\",\"relationName\":\"GroupSettingsToGroups\"}],\"dbName\":null},\"BlockedGroupParticipant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blockedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blocker\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BlockedByUser\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"Groups\",\"relationName\":\"BlockedGroupParticipantToGroups\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BlockedUser\"}],\"dbName\":null},\"GroupMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"GroupMemberRole\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastSeen\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isMuted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"mutedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mutedUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isBlocked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"Groups\",\"relationName\":\"GroupMemberToGroups\"},{\"name\":\"mutedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MutedByUser\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GroupMembers\"}],\"dbName\":null},\"ActivityLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ActivityLogToUser\"}],\"dbName\":null},\"LoginHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ip_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"device\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capital\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"continent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LoginHistoryToUser\"}],\"dbName\":null},\"TwoFactorAuth\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TwoFactorAuthToUser\"}],\"dbName\":null},\"BatchProcessLogs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"job_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"job_data\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"ResetPasswordRequests\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reset_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResetPasswordRequestsToUser\"}],\"dbName\":null},\"WithdrawalRequestCode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWithdrawalRequestCode\"}],\"dbName\":null},\"WithdrawalRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"recipient_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bank_account_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"WithdrawalRequestStatus\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transfer_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paystack_response\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"bank\",\"kind\":\"object\",\"type\":\"UserBanks\",\"relationName\":\"UserBanksToWithdrawalRequest\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWithdrawalRequest\"}],\"dbName\":null},\"PlatformExchangeRate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buyValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sellValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"rate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"symbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"OuterPages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"page_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SupportTickets\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ticket_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"SupportTicketReplies\",\"kind\":\"object\",\"type\":\"SupportTicketReplies\",\"relationName\":\"SupportTicketRepliesToSupportTickets\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SupportTicketsToUser\"}],\"dbName\":null},\"SupportTicketReplies\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ticket_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ticket\",\"kind\":\"object\",\"type\":\"SupportTickets\",\"relationName\":\"SupportTicketRepliesToSupportTickets\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SupportTicketRepliesToUser\"}],\"dbName\":null},\"Configurations\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"app_name\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"app_name\"},{\"name\":\"app_version\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"app_version\"},{\"name\":\"app_url\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"app_url\"},{\"name\":\"app_description\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"app_description\"},{\"name\":\"app_logo\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"app_logo\"},{\"name\":\"default_currency\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"default_currency\"},{\"name\":\"default_rate\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"default_rate\"},{\"name\":\"default_symbol\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"default_symbol\"},{\"name\":\"point_conversion_rate\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"point_conversion_rate\"},{\"name\":\"point_conversion_rate_ngn\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"point_conversion_rate_ngn\"},{\"name\":\"min_withdrawal_amount\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"min_withdrawal_amount\"},{\"name\":\"min_withdrawal_amount_ngn\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"min_withdrawal_amount_ngn\"},{\"name\":\"min_deposit_amount\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"min_deposit_amount\"},{\"name\":\"min_deposit_amount_ngn\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"min_deposit_amount_ngn\"},{\"name\":\"default_mode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"default_mode\"},{\"name\":\"primary_color\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"primary_color\"},{\"name\":\"secondary_color\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"secondary_color\"},{\"name\":\"accent_color\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"accent_color\"},{\"name\":\"home_feed_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"home_feed_limit\"},{\"name\":\"personal_profile_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"personal_profile_limit\"},{\"name\":\"personal_media_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"personal_media_limit\"},{\"name\":\"personal_repost_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"personal_repost_limit\"},{\"name\":\"post_page_comment_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"post_page_comment_limit\"},{\"name\":\"post_page_comment_reply_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"post_page_comment_reply_limit\"},{\"name\":\"other_user_profile_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"other_user_profile_limit\"},{\"name\":\"other_user_media_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"other_user_media_limit\"},{\"name\":\"other_user_repost_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"other_user_repost_limit\"},{\"name\":\"notification_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"notification_limit\"},{\"name\":\"transaction_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"transaction_limit\"},{\"name\":\"model_search_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"model_search_limit\"},{\"name\":\"conversation_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"conversation_limit\"},{\"name\":\"message_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"message_limit\"},{\"name\":\"group_message_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"group_message_limit\"},{\"name\":\"group_participant_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"group_participant_limit\"},{\"name\":\"group_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"group_limit\"},{\"name\":\"hookup_enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"hookup_enabled\"},{\"name\":\"hookup_page_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"hookup_page_limit\"},{\"name\":\"status_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"status_limit\"},{\"name\":\"subscription_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"subscription_limit\"},{\"name\":\"subscribers_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"subscribers_limit\"},{\"name\":\"active_subscribers_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"active_subscribers_limit\"},{\"name\":\"followers_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"followers_limit\"},{\"name\":\"upload_media_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"upload_media_limit\"},{\"name\":\"model_upload_media_limit\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"model_upload_media_limit\"},{\"name\":\"profile_updated_success_message\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_updated_success_message\"},{\"name\":\"profile_updated_error_message\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_updated_error_message\"},{\"name\":\"profile_updating_message\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_updating_message\"},{\"name\":\"profile_image_updated_success_message\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_image_updated_success_message\"},{\"name\":\"profile_image_updated_error_message\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_image_updated_error_message\"},{\"name\":\"profile_image_updating_message\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_image_updating_message\"},{\"name\":\"point_purchase_success_message\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"point_purchase_success_message\"},{\"name\":\"point_purchase_error_message\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"point_purchase_error_message\"},{\"name\":\"point_purchasing_message\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"point_purchasing_message\"},{\"name\":\"point_purchase_minimum_message\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"point_purchase_minimum_message\"},{\"name\":\"welcome_message_title\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"welcome_message_title\"},{\"name\":\"welcome_message_content\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"welcome_message_content\"},{\"name\":\"welcome_message_enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"welcome_message_enabled\"},{\"name\":\"welcome_message_delay\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"welcome_message_delay\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"platform_deposit_fee\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"platform_deposit_fee\"},{\"name\":\"platform_withdrawal_fee\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"platform_withdrawal_fee\"}],\"dbName\":null},\"PostGift\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gifter_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"receiver_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"gifter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Gifter\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPostGift\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GiftReceiver\"}],\"dbName\":null},\"UserWithdrawalPin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserWithdrawalPin\"}],\"dbName\":null},\"UserBlock\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"block_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blocker_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blocked_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"blocked\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserBlocked\"},{\"name\":\"blocker\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserBlocker\"}],\"dbName\":null},\"PurchasedPosts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"purchase_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPurchasedPosts\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PurchasedPostsToUser\"}],\"dbName\":null},\"AutomatedMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message_type\",\"kind\":\"enum\",\"type\":\"AutomatedMessageType\"},{\"name\":\"message_text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AutomatedMessageToUser\"}],\"dbName\":null},\"GroupMessageRead\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"GroupMessage\",\"relationName\":\"GroupMessageToGroupMessageRead\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GroupMessageReadToUser\"}],\"dbName\":null},\"GroupJoinRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"JoinRequestStatus\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"Groups\",\"relationName\":\"GroupJoinRequestToGroups\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GroupJoinRequests\"}],\"dbName\":null},\"GroupInvitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"inviterId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"inviteeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvitationStatus\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"Groups\",\"relationName\":\"GroupInvitationToGroups\"},{\"name\":\"inviter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GroupInvitationsSent\"},{\"name\":\"invitee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GroupInvitationsReceived\"}],\"dbName\":null},\"Referrals\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"referral_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Referrer\"},{\"name\":\"referral\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserReferrals\"}],\"dbName\":null},\"ReferralEarnings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReferralEarningsToUser\"}],\"dbName\":null},\"ConversationFreeMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversation_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ConversationFreeMessageToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

